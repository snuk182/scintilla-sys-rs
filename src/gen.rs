/* automatically generated by rust-bindgen */
#![allow(dead_code,non_camel_case_types,non_upper_case_globals,non_snake_case)]

pub const MINGW_HAS_SECURE_API: ::std::os::raw::c_uint = 1;
pub const __MINGW64_VERSION_MAJOR: ::std::os::raw::c_uint = 5;
pub const __MINGW64_VERSION_MINOR: ::std::os::raw::c_uint = 0;
pub const __MINGW64_VERSION_RC: ::std::os::raw::c_uint = 0;
pub const __MINGW64_VERSION_STATE: &'static [u8; 6usize] = b"alpha\0";
pub const __MINGW32_MAJOR_VERSION: ::std::os::raw::c_uint = 3;
pub const __MINGW32_MINOR_VERSION: ::std::os::raw::c_uint = 11;
pub const _M_AMD64: ::std::os::raw::c_uint = 100;
pub const _M_X64: ::std::os::raw::c_uint = 100;
pub const __: ::std::os::raw::c_uint = 1;
pub const __MINGW_USE_UNDERSCORE_PREFIX: ::std::os::raw::c_uint = 0;
pub const __MINGW_HAVE_ANSI_C99_PRINTF: ::std::os::raw::c_uint = 1;
pub const __MINGW_HAVE_WIDE_C99_PRINTF: ::std::os::raw::c_uint = 1;
pub const __MINGW_HAVE_ANSI_C99_SCANF: ::std::os::raw::c_uint = 1;
pub const __MINGW_HAVE_WIDE_C99_SCANF: ::std::os::raw::c_uint = 1;
pub const __MINGW_SEC_WARN_STR : & 'static [ u8 ; 92usize ] = b"This function or variable may be unsafe, use _CRT_SECURE_NO_WARNINGS to disable deprecation\0" ;
pub const __MINGW_MSVC2005_DEPREC_STR : & 'static [ u8 ; 117usize ] = b"This POSIX function is deprecated beginning in Visual C++ 2005, use _CRT_NONSTDC_NO_DEPRECATE to disable deprecation\0" ;
pub const _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES: ::std::os::raw::c_uint = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY: ::std::os::raw::c_uint = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES: ::std::os::raw::c_uint = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT: ::std::os::raw::c_uint = 0;
pub const _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY: ::std::os::raw::c_uint = 0;
pub const __USE_CRTIMP: ::std::os::raw::c_uint = 1;
pub const USE___UUIDOF: ::std::os::raw::c_uint = 0;
pub const __CRT__NO_INLINE: ::std::os::raw::c_uint = 1;
pub const __MSVCRT_VERSION__: ::std::os::raw::c_uint = 1792;
pub const _WIN32_WINNT: ::std::os::raw::c_uint = 1282;
pub const __STDC_SECURE_LIB__: ::std::os::raw::c_uint = 200411;
pub const __GOT_SECURE_LIB__: ::std::os::raw::c_uint = 200411;
pub const __MINGW_HAS_DXSDK: ::std::os::raw::c_uint = 1;
pub const MINGW_HAS_DDRAW_H: ::std::os::raw::c_uint = 1;
pub const MINGW_DDRAW_VERSION: ::std::os::raw::c_uint = 7;
pub const MINGW_HAS_DDK_H: ::std::os::raw::c_uint = 1;
pub const _CRT_PACKING: ::std::os::raw::c_uint = 8;
pub const _SECURECRT_FILL_BUFFER_PATTERN: ::std::os::raw::c_uint = 253;
pub const _ARGMAX: ::std::os::raw::c_uint = 100;
pub const INT8_MIN: ::std::os::raw::c_int = -128;
pub const INT16_MIN: ::std::os::raw::c_int = -32768;
pub const INT32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT8_MAX: ::std::os::raw::c_uint = 127;
pub const INT16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT64_MAX: ::std::os::raw::c_int = -1;
pub const INT_LEAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_LEAST16_MIN: ::std::os::raw::c_int = -32768;
pub const INT_LEAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_LEAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_LEAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_LEAST16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT_LEAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_LEAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_LEAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_LEAST16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT_LEAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_LEAST64_MAX: ::std::os::raw::c_int = -1;
pub const INT_FAST8_MIN: ::std::os::raw::c_int = -128;
pub const INT_FAST16_MIN: ::std::os::raw::c_int = -32768;
pub const INT_FAST32_MIN: ::std::os::raw::c_int = -2147483648;
pub const INT_FAST64_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INT_FAST8_MAX: ::std::os::raw::c_uint = 127;
pub const INT_FAST16_MAX: ::std::os::raw::c_uint = 32767;
pub const INT_FAST32_MAX: ::std::os::raw::c_uint = 2147483647;
pub const INT_FAST64_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINT_FAST8_MAX: ::std::os::raw::c_uint = 255;
pub const UINT_FAST16_MAX: ::std::os::raw::c_uint = 65535;
pub const UINT_FAST32_MAX: ::std::os::raw::c_uint = 4294967295;
pub const UINT_FAST64_MAX: ::std::os::raw::c_int = -1;
pub const INTPTR_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTPTR_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTPTR_MAX: ::std::os::raw::c_int = -1;
pub const INTMAX_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const INTMAX_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const UINTMAX_MAX: ::std::os::raw::c_int = -1;
pub const PTRDIFF_MIN: ::std::os::raw::c_longlong = -9223372036854775808;
pub const PTRDIFF_MAX: ::std::os::raw::c_ulonglong = 9223372036854775807;
pub const SIG_ATOMIC_MIN: ::std::os::raw::c_int = -2147483648;
pub const SIG_ATOMIC_MAX: ::std::os::raw::c_uint = 2147483647;
pub const SIZE_MAX: ::std::os::raw::c_int = -1;
pub const WCHAR_MIN: ::std::os::raw::c_uint = 0;
pub const WCHAR_MAX: ::std::os::raw::c_uint = 65535;
pub const WINT_MIN: ::std::os::raw::c_uint = 0;
pub const WINT_MAX: ::std::os::raw::c_uint = 65535;
pub const INVALID_POSITION: ::std::os::raw::c_int = -1;
pub const SCI_START: ::std::os::raw::c_uint = 2000;
pub const SCI_OPTIONAL_START: ::std::os::raw::c_uint = 3000;
pub const SCI_LEXER_START: ::std::os::raw::c_uint = 4000;
pub const SCI_ADDTEXT: ::std::os::raw::c_uint = 2001;
pub const SCI_ADDSTYLEDTEXT: ::std::os::raw::c_uint = 2002;
pub const SCI_INSERTTEXT: ::std::os::raw::c_uint = 2003;
pub const SCI_CHANGEINSERTION: ::std::os::raw::c_uint = 2672;
pub const SCI_CLEARALL: ::std::os::raw::c_uint = 2004;
pub const SCI_DELETERANGE: ::std::os::raw::c_uint = 2645;
pub const SCI_CLEARDOCUMENTSTYLE: ::std::os::raw::c_uint = 2005;
pub const SCI_GETLENGTH: ::std::os::raw::c_uint = 2006;
pub const SCI_GETCHARAT: ::std::os::raw::c_uint = 2007;
pub const SCI_GETCURRENTPOS: ::std::os::raw::c_uint = 2008;
pub const SCI_GETANCHOR: ::std::os::raw::c_uint = 2009;
pub const SCI_GETSTYLEAT: ::std::os::raw::c_uint = 2010;
pub const SCI_REDO: ::std::os::raw::c_uint = 2011;
pub const SCI_SETUNDOCOLLECTION: ::std::os::raw::c_uint = 2012;
pub const SCI_SELECTALL: ::std::os::raw::c_uint = 2013;
pub const SCI_SETSAVEPOINT: ::std::os::raw::c_uint = 2014;
pub const SCI_GETSTYLEDTEXT: ::std::os::raw::c_uint = 2015;
pub const SCI_CANREDO: ::std::os::raw::c_uint = 2016;
pub const SCI_MARKERLINEFROMHANDLE: ::std::os::raw::c_uint = 2017;
pub const SCI_MARKERDELETEHANDLE: ::std::os::raw::c_uint = 2018;
pub const SCI_GETUNDOCOLLECTION: ::std::os::raw::c_uint = 2019;
pub const SCWS_INVISIBLE: ::std::os::raw::c_uint = 0;
pub const SCWS_VISIBLEALWAYS: ::std::os::raw::c_uint = 1;
pub const SCWS_VISIBLEAFTERINDENT: ::std::os::raw::c_uint = 2;
pub const SCWS_VISIBLEONLYININDENT: ::std::os::raw::c_uint = 3;
pub const SCI_GETVIEWWS: ::std::os::raw::c_uint = 2020;
pub const SCI_SETVIEWWS: ::std::os::raw::c_uint = 2021;
pub const SCTD_LONGARROW: ::std::os::raw::c_uint = 0;
pub const SCTD_STRIKEOUT: ::std::os::raw::c_uint = 1;
pub const SCI_GETTABDRAWMODE: ::std::os::raw::c_uint = 2698;
pub const SCI_SETTABDRAWMODE: ::std::os::raw::c_uint = 2699;
pub const SCI_POSITIONFROMPOINT: ::std::os::raw::c_uint = 2022;
pub const SCI_POSITIONFROMPOINTCLOSE: ::std::os::raw::c_uint = 2023;
pub const SCI_GOTOLINE: ::std::os::raw::c_uint = 2024;
pub const SCI_GOTOPOS: ::std::os::raw::c_uint = 2025;
pub const SCI_SETANCHOR: ::std::os::raw::c_uint = 2026;
pub const SCI_GETCURLINE: ::std::os::raw::c_uint = 2027;
pub const SCI_GETENDSTYLED: ::std::os::raw::c_uint = 2028;
pub const SC_EOL_CRLF: ::std::os::raw::c_uint = 0;
pub const SC_EOL_CR: ::std::os::raw::c_uint = 1;
pub const SC_EOL_LF: ::std::os::raw::c_uint = 2;
pub const SCI_CONVERTEOLS: ::std::os::raw::c_uint = 2029;
pub const SCI_GETEOLMODE: ::std::os::raw::c_uint = 2030;
pub const SCI_SETEOLMODE: ::std::os::raw::c_uint = 2031;
pub const SCI_STARTSTYLING: ::std::os::raw::c_uint = 2032;
pub const SCI_SETSTYLING: ::std::os::raw::c_uint = 2033;
pub const SCI_GETBUFFEREDDRAW: ::std::os::raw::c_uint = 2034;
pub const SCI_SETBUFFEREDDRAW: ::std::os::raw::c_uint = 2035;
pub const SCI_SETTABWIDTH: ::std::os::raw::c_uint = 2036;
pub const SCI_GETTABWIDTH: ::std::os::raw::c_uint = 2121;
pub const SCI_CLEARTABSTOPS: ::std::os::raw::c_uint = 2675;
pub const SCI_ADDTABSTOP: ::std::os::raw::c_uint = 2676;
pub const SCI_GETNEXTTABSTOP: ::std::os::raw::c_uint = 2677;
pub const SC_CP_UTF8: ::std::os::raw::c_uint = 65001;
pub const SCI_SETCODEPAGE: ::std::os::raw::c_uint = 2037;
pub const SC_IME_WINDOWED: ::std::os::raw::c_uint = 0;
pub const SC_IME_INLINE: ::std::os::raw::c_uint = 1;
pub const SCI_GETIMEINTERACTION: ::std::os::raw::c_uint = 2678;
pub const SCI_SETIMEINTERACTION: ::std::os::raw::c_uint = 2679;
pub const MARKER_MAX: ::std::os::raw::c_uint = 31;
pub const SC_MARK_CIRCLE: ::std::os::raw::c_uint = 0;
pub const SC_MARK_ROUNDRECT: ::std::os::raw::c_uint = 1;
pub const SC_MARK_ARROW: ::std::os::raw::c_uint = 2;
pub const SC_MARK_SMALLRECT: ::std::os::raw::c_uint = 3;
pub const SC_MARK_SHORTARROW: ::std::os::raw::c_uint = 4;
pub const SC_MARK_EMPTY: ::std::os::raw::c_uint = 5;
pub const SC_MARK_ARROWDOWN: ::std::os::raw::c_uint = 6;
pub const SC_MARK_MINUS: ::std::os::raw::c_uint = 7;
pub const SC_MARK_PLUS: ::std::os::raw::c_uint = 8;
pub const SC_MARK_VLINE: ::std::os::raw::c_uint = 9;
pub const SC_MARK_LCORNER: ::std::os::raw::c_uint = 10;
pub const SC_MARK_TCORNER: ::std::os::raw::c_uint = 11;
pub const SC_MARK_BOXPLUS: ::std::os::raw::c_uint = 12;
pub const SC_MARK_BOXPLUSCONNECTED: ::std::os::raw::c_uint = 13;
pub const SC_MARK_BOXMINUS: ::std::os::raw::c_uint = 14;
pub const SC_MARK_BOXMINUSCONNECTED: ::std::os::raw::c_uint = 15;
pub const SC_MARK_LCORNERCURVE: ::std::os::raw::c_uint = 16;
pub const SC_MARK_TCORNERCURVE: ::std::os::raw::c_uint = 17;
pub const SC_MARK_CIRCLEPLUS: ::std::os::raw::c_uint = 18;
pub const SC_MARK_CIRCLEPLUSCONNECTED: ::std::os::raw::c_uint = 19;
pub const SC_MARK_CIRCLEMINUS: ::std::os::raw::c_uint = 20;
pub const SC_MARK_CIRCLEMINUSCONNECTED: ::std::os::raw::c_uint = 21;
pub const SC_MARK_BACKGROUND: ::std::os::raw::c_uint = 22;
pub const SC_MARK_DOTDOTDOT: ::std::os::raw::c_uint = 23;
pub const SC_MARK_ARROWS: ::std::os::raw::c_uint = 24;
pub const SC_MARK_PIXMAP: ::std::os::raw::c_uint = 25;
pub const SC_MARK_FULLRECT: ::std::os::raw::c_uint = 26;
pub const SC_MARK_LEFTRECT: ::std::os::raw::c_uint = 27;
pub const SC_MARK_AVAILABLE: ::std::os::raw::c_uint = 28;
pub const SC_MARK_UNDERLINE: ::std::os::raw::c_uint = 29;
pub const SC_MARK_RGBAIMAGE: ::std::os::raw::c_uint = 30;
pub const SC_MARK_BOOKMARK: ::std::os::raw::c_uint = 31;
pub const SC_MARK_CHARACTER: ::std::os::raw::c_uint = 10000;
pub const SC_MARKNUM_FOLDEREND: ::std::os::raw::c_uint = 25;
pub const SC_MARKNUM_FOLDEROPENMID: ::std::os::raw::c_uint = 26;
pub const SC_MARKNUM_FOLDERMIDTAIL: ::std::os::raw::c_uint = 27;
pub const SC_MARKNUM_FOLDERTAIL: ::std::os::raw::c_uint = 28;
pub const SC_MARKNUM_FOLDERSUB: ::std::os::raw::c_uint = 29;
pub const SC_MARKNUM_FOLDER: ::std::os::raw::c_uint = 30;
pub const SC_MARKNUM_FOLDEROPEN: ::std::os::raw::c_uint = 31;
pub const SC_MASK_FOLDERS: ::std::os::raw::c_uint = 4261412864;
pub const SCI_MARKERDEFINE: ::std::os::raw::c_uint = 2040;
pub const SCI_MARKERSETFORE: ::std::os::raw::c_uint = 2041;
pub const SCI_MARKERSETBACK: ::std::os::raw::c_uint = 2042;
pub const SCI_MARKERSETBACKSELECTED: ::std::os::raw::c_uint = 2292;
pub const SCI_MARKERENABLEHIGHLIGHT: ::std::os::raw::c_uint = 2293;
pub const SCI_MARKERADD: ::std::os::raw::c_uint = 2043;
pub const SCI_MARKERDELETE: ::std::os::raw::c_uint = 2044;
pub const SCI_MARKERDELETEALL: ::std::os::raw::c_uint = 2045;
pub const SCI_MARKERGET: ::std::os::raw::c_uint = 2046;
pub const SCI_MARKERNEXT: ::std::os::raw::c_uint = 2047;
pub const SCI_MARKERPREVIOUS: ::std::os::raw::c_uint = 2048;
pub const SCI_MARKERDEFINEPIXMAP: ::std::os::raw::c_uint = 2049;
pub const SCI_MARKERADDSET: ::std::os::raw::c_uint = 2466;
pub const SCI_MARKERSETALPHA: ::std::os::raw::c_uint = 2476;
pub const SC_MAX_MARGIN: ::std::os::raw::c_uint = 4;
pub const SC_MARGIN_SYMBOL: ::std::os::raw::c_uint = 0;
pub const SC_MARGIN_NUMBER: ::std::os::raw::c_uint = 1;
pub const SC_MARGIN_BACK: ::std::os::raw::c_uint = 2;
pub const SC_MARGIN_FORE: ::std::os::raw::c_uint = 3;
pub const SC_MARGIN_TEXT: ::std::os::raw::c_uint = 4;
pub const SC_MARGIN_RTEXT: ::std::os::raw::c_uint = 5;
pub const SC_MARGIN_COLOUR: ::std::os::raw::c_uint = 6;
pub const SCI_SETMARGINTYPEN: ::std::os::raw::c_uint = 2240;
pub const SCI_GETMARGINTYPEN: ::std::os::raw::c_uint = 2241;
pub const SCI_SETMARGINWIDTHN: ::std::os::raw::c_uint = 2242;
pub const SCI_GETMARGINWIDTHN: ::std::os::raw::c_uint = 2243;
pub const SCI_SETMARGINMASKN: ::std::os::raw::c_uint = 2244;
pub const SCI_GETMARGINMASKN: ::std::os::raw::c_uint = 2245;
pub const SCI_SETMARGINSENSITIVEN: ::std::os::raw::c_uint = 2246;
pub const SCI_GETMARGINSENSITIVEN: ::std::os::raw::c_uint = 2247;
pub const SCI_SETMARGINCURSORN: ::std::os::raw::c_uint = 2248;
pub const SCI_GETMARGINCURSORN: ::std::os::raw::c_uint = 2249;
pub const SCI_SETMARGINBACKN: ::std::os::raw::c_uint = 2250;
pub const SCI_GETMARGINBACKN: ::std::os::raw::c_uint = 2251;
pub const SCI_SETMARGINS: ::std::os::raw::c_uint = 2252;
pub const SCI_GETMARGINS: ::std::os::raw::c_uint = 2253;
pub const STYLE_DEFAULT: ::std::os::raw::c_uint = 32;
pub const STYLE_LINENUMBER: ::std::os::raw::c_uint = 33;
pub const STYLE_BRACELIGHT: ::std::os::raw::c_uint = 34;
pub const STYLE_BRACEBAD: ::std::os::raw::c_uint = 35;
pub const STYLE_CONTROLCHAR: ::std::os::raw::c_uint = 36;
pub const STYLE_INDENTGUIDE: ::std::os::raw::c_uint = 37;
pub const STYLE_CALLTIP: ::std::os::raw::c_uint = 38;
pub const STYLE_FOLDDISPLAYTEXT: ::std::os::raw::c_uint = 39;
pub const STYLE_LASTPREDEFINED: ::std::os::raw::c_uint = 39;
pub const STYLE_MAX: ::std::os::raw::c_uint = 255;
pub const SC_CHARSET_ANSI: ::std::os::raw::c_uint = 0;
pub const SC_CHARSET_DEFAULT: ::std::os::raw::c_uint = 1;
pub const SC_CHARSET_BALTIC: ::std::os::raw::c_uint = 186;
pub const SC_CHARSET_CHINESEBIG5: ::std::os::raw::c_uint = 136;
pub const SC_CHARSET_EASTEUROPE: ::std::os::raw::c_uint = 238;
pub const SC_CHARSET_GB2312: ::std::os::raw::c_uint = 134;
pub const SC_CHARSET_GREEK: ::std::os::raw::c_uint = 161;
pub const SC_CHARSET_HANGUL: ::std::os::raw::c_uint = 129;
pub const SC_CHARSET_MAC: ::std::os::raw::c_uint = 77;
pub const SC_CHARSET_OEM: ::std::os::raw::c_uint = 255;
pub const SC_CHARSET_RUSSIAN: ::std::os::raw::c_uint = 204;
pub const SC_CHARSET_OEM866: ::std::os::raw::c_uint = 866;
pub const SC_CHARSET_CYRILLIC: ::std::os::raw::c_uint = 1251;
pub const SC_CHARSET_SHIFTJIS: ::std::os::raw::c_uint = 128;
pub const SC_CHARSET_SYMBOL: ::std::os::raw::c_uint = 2;
pub const SC_CHARSET_TURKISH: ::std::os::raw::c_uint = 162;
pub const SC_CHARSET_JOHAB: ::std::os::raw::c_uint = 130;
pub const SC_CHARSET_HEBREW: ::std::os::raw::c_uint = 177;
pub const SC_CHARSET_ARABIC: ::std::os::raw::c_uint = 178;
pub const SC_CHARSET_VIETNAMESE: ::std::os::raw::c_uint = 163;
pub const SC_CHARSET_THAI: ::std::os::raw::c_uint = 222;
pub const SC_CHARSET_8859_15: ::std::os::raw::c_uint = 1000;
pub const SCI_STYLECLEARALL: ::std::os::raw::c_uint = 2050;
pub const SCI_STYLESETFORE: ::std::os::raw::c_uint = 2051;
pub const SCI_STYLESETBACK: ::std::os::raw::c_uint = 2052;
pub const SCI_STYLESETBOLD: ::std::os::raw::c_uint = 2053;
pub const SCI_STYLESETITALIC: ::std::os::raw::c_uint = 2054;
pub const SCI_STYLESETSIZE: ::std::os::raw::c_uint = 2055;
pub const SCI_STYLESETFONT: ::std::os::raw::c_uint = 2056;
pub const SCI_STYLESETEOLFILLED: ::std::os::raw::c_uint = 2057;
pub const SCI_STYLERESETDEFAULT: ::std::os::raw::c_uint = 2058;
pub const SCI_STYLESETUNDERLINE: ::std::os::raw::c_uint = 2059;
pub const SC_CASE_MIXED: ::std::os::raw::c_uint = 0;
pub const SC_CASE_UPPER: ::std::os::raw::c_uint = 1;
pub const SC_CASE_LOWER: ::std::os::raw::c_uint = 2;
pub const SC_CASE_CAMEL: ::std::os::raw::c_uint = 3;
pub const SCI_STYLEGETFORE: ::std::os::raw::c_uint = 2481;
pub const SCI_STYLEGETBACK: ::std::os::raw::c_uint = 2482;
pub const SCI_STYLEGETBOLD: ::std::os::raw::c_uint = 2483;
pub const SCI_STYLEGETITALIC: ::std::os::raw::c_uint = 2484;
pub const SCI_STYLEGETSIZE: ::std::os::raw::c_uint = 2485;
pub const SCI_STYLEGETFONT: ::std::os::raw::c_uint = 2486;
pub const SCI_STYLEGETEOLFILLED: ::std::os::raw::c_uint = 2487;
pub const SCI_STYLEGETUNDERLINE: ::std::os::raw::c_uint = 2488;
pub const SCI_STYLEGETCASE: ::std::os::raw::c_uint = 2489;
pub const SCI_STYLEGETCHARACTERSET: ::std::os::raw::c_uint = 2490;
pub const SCI_STYLEGETVISIBLE: ::std::os::raw::c_uint = 2491;
pub const SCI_STYLEGETCHANGEABLE: ::std::os::raw::c_uint = 2492;
pub const SCI_STYLEGETHOTSPOT: ::std::os::raw::c_uint = 2493;
pub const SCI_STYLESETCASE: ::std::os::raw::c_uint = 2060;
pub const SC_FONT_SIZE_MULTIPLIER: ::std::os::raw::c_uint = 100;
pub const SCI_STYLESETSIZEFRACTIONAL: ::std::os::raw::c_uint = 2061;
pub const SCI_STYLEGETSIZEFRACTIONAL: ::std::os::raw::c_uint = 2062;
pub const SC_WEIGHT_NORMAL: ::std::os::raw::c_uint = 400;
pub const SC_WEIGHT_SEMIBOLD: ::std::os::raw::c_uint = 600;
pub const SC_WEIGHT_BOLD: ::std::os::raw::c_uint = 700;
pub const SCI_STYLESETWEIGHT: ::std::os::raw::c_uint = 2063;
pub const SCI_STYLEGETWEIGHT: ::std::os::raw::c_uint = 2064;
pub const SCI_STYLESETCHARACTERSET: ::std::os::raw::c_uint = 2066;
pub const SCI_STYLESETHOTSPOT: ::std::os::raw::c_uint = 2409;
pub const SCI_SETSELFORE: ::std::os::raw::c_uint = 2067;
pub const SCI_SETSELBACK: ::std::os::raw::c_uint = 2068;
pub const SCI_GETSELALPHA: ::std::os::raw::c_uint = 2477;
pub const SCI_SETSELALPHA: ::std::os::raw::c_uint = 2478;
pub const SCI_GETSELEOLFILLED: ::std::os::raw::c_uint = 2479;
pub const SCI_SETSELEOLFILLED: ::std::os::raw::c_uint = 2480;
pub const SCI_SETCARETFORE: ::std::os::raw::c_uint = 2069;
pub const SCI_ASSIGNCMDKEY: ::std::os::raw::c_uint = 2070;
pub const SCI_CLEARCMDKEY: ::std::os::raw::c_uint = 2071;
pub const SCI_CLEARALLCMDKEYS: ::std::os::raw::c_uint = 2072;
pub const SCI_SETSTYLINGEX: ::std::os::raw::c_uint = 2073;
pub const SCI_STYLESETVISIBLE: ::std::os::raw::c_uint = 2074;
pub const SCI_GETCARETPERIOD: ::std::os::raw::c_uint = 2075;
pub const SCI_SETCARETPERIOD: ::std::os::raw::c_uint = 2076;
pub const SCI_SETWORDCHARS: ::std::os::raw::c_uint = 2077;
pub const SCI_GETWORDCHARS: ::std::os::raw::c_uint = 2646;
pub const SCI_BEGINUNDOACTION: ::std::os::raw::c_uint = 2078;
pub const SCI_ENDUNDOACTION: ::std::os::raw::c_uint = 2079;
pub const INDIC_PLAIN: ::std::os::raw::c_uint = 0;
pub const INDIC_SQUIGGLE: ::std::os::raw::c_uint = 1;
pub const INDIC_TT: ::std::os::raw::c_uint = 2;
pub const INDIC_DIAGONAL: ::std::os::raw::c_uint = 3;
pub const INDIC_STRIKE: ::std::os::raw::c_uint = 4;
pub const INDIC_HIDDEN: ::std::os::raw::c_uint = 5;
pub const INDIC_BOX: ::std::os::raw::c_uint = 6;
pub const INDIC_ROUNDBOX: ::std::os::raw::c_uint = 7;
pub const INDIC_STRAIGHTBOX: ::std::os::raw::c_uint = 8;
pub const INDIC_DASH: ::std::os::raw::c_uint = 9;
pub const INDIC_DOTS: ::std::os::raw::c_uint = 10;
pub const INDIC_SQUIGGLELOW: ::std::os::raw::c_uint = 11;
pub const INDIC_DOTBOX: ::std::os::raw::c_uint = 12;
pub const INDIC_SQUIGGLEPIXMAP: ::std::os::raw::c_uint = 13;
pub const INDIC_COMPOSITIONTHICK: ::std::os::raw::c_uint = 14;
pub const INDIC_COMPOSITIONTHIN: ::std::os::raw::c_uint = 15;
pub const INDIC_FULLBOX: ::std::os::raw::c_uint = 16;
pub const INDIC_TEXTFORE: ::std::os::raw::c_uint = 17;
pub const INDIC_POINT: ::std::os::raw::c_uint = 18;
pub const INDIC_POINTCHARACTER: ::std::os::raw::c_uint = 19;
pub const INDIC_IME: ::std::os::raw::c_uint = 32;
pub const INDIC_IME_MAX: ::std::os::raw::c_uint = 35;
pub const INDIC_MAX: ::std::os::raw::c_uint = 35;
pub const INDIC_CONTAINER: ::std::os::raw::c_uint = 8;
pub const INDIC0_MASK: ::std::os::raw::c_uint = 32;
pub const INDIC1_MASK: ::std::os::raw::c_uint = 64;
pub const INDIC2_MASK: ::std::os::raw::c_uint = 128;
pub const INDICS_MASK: ::std::os::raw::c_uint = 224;
pub const SCI_INDICSETSTYLE: ::std::os::raw::c_uint = 2080;
pub const SCI_INDICGETSTYLE: ::std::os::raw::c_uint = 2081;
pub const SCI_INDICSETFORE: ::std::os::raw::c_uint = 2082;
pub const SCI_INDICGETFORE: ::std::os::raw::c_uint = 2083;
pub const SCI_INDICSETUNDER: ::std::os::raw::c_uint = 2510;
pub const SCI_INDICGETUNDER: ::std::os::raw::c_uint = 2511;
pub const SCI_INDICSETHOVERSTYLE: ::std::os::raw::c_uint = 2680;
pub const SCI_INDICGETHOVERSTYLE: ::std::os::raw::c_uint = 2681;
pub const SCI_INDICSETHOVERFORE: ::std::os::raw::c_uint = 2682;
pub const SCI_INDICGETHOVERFORE: ::std::os::raw::c_uint = 2683;
pub const SC_INDICVALUEBIT: ::std::os::raw::c_uint = 16777216;
pub const SC_INDICVALUEMASK: ::std::os::raw::c_uint = 16777215;
pub const SC_INDICFLAG_VALUEFORE: ::std::os::raw::c_uint = 1;
pub const SCI_INDICSETFLAGS: ::std::os::raw::c_uint = 2684;
pub const SCI_INDICGETFLAGS: ::std::os::raw::c_uint = 2685;
pub const SCI_SETWHITESPACEFORE: ::std::os::raw::c_uint = 2084;
pub const SCI_SETWHITESPACEBACK: ::std::os::raw::c_uint = 2085;
pub const SCI_SETWHITESPACESIZE: ::std::os::raw::c_uint = 2086;
pub const SCI_GETWHITESPACESIZE: ::std::os::raw::c_uint = 2087;
pub const SCI_SETLINESTATE: ::std::os::raw::c_uint = 2092;
pub const SCI_GETLINESTATE: ::std::os::raw::c_uint = 2093;
pub const SCI_GETMAXLINESTATE: ::std::os::raw::c_uint = 2094;
pub const SCI_GETCARETLINEVISIBLE: ::std::os::raw::c_uint = 2095;
pub const SCI_SETCARETLINEVISIBLE: ::std::os::raw::c_uint = 2096;
pub const SCI_GETCARETLINEBACK: ::std::os::raw::c_uint = 2097;
pub const SCI_SETCARETLINEBACK: ::std::os::raw::c_uint = 2098;
pub const SCI_GETCARETLINEFRAME: ::std::os::raw::c_uint = 2704;
pub const SCI_SETCARETLINEFRAME: ::std::os::raw::c_uint = 2705;
pub const SCI_STYLESETCHANGEABLE: ::std::os::raw::c_uint = 2099;
pub const SCI_AUTOCSHOW: ::std::os::raw::c_uint = 2100;
pub const SCI_AUTOCCANCEL: ::std::os::raw::c_uint = 2101;
pub const SCI_AUTOCACTIVE: ::std::os::raw::c_uint = 2102;
pub const SCI_AUTOCPOSSTART: ::std::os::raw::c_uint = 2103;
pub const SCI_AUTOCCOMPLETE: ::std::os::raw::c_uint = 2104;
pub const SCI_AUTOCSTOPS: ::std::os::raw::c_uint = 2105;
pub const SCI_AUTOCSETSEPARATOR: ::std::os::raw::c_uint = 2106;
pub const SCI_AUTOCGETSEPARATOR: ::std::os::raw::c_uint = 2107;
pub const SCI_AUTOCSELECT: ::std::os::raw::c_uint = 2108;
pub const SCI_AUTOCSETCANCELATSTART: ::std::os::raw::c_uint = 2110;
pub const SCI_AUTOCGETCANCELATSTART: ::std::os::raw::c_uint = 2111;
pub const SCI_AUTOCSETFILLUPS: ::std::os::raw::c_uint = 2112;
pub const SCI_AUTOCSETCHOOSESINGLE: ::std::os::raw::c_uint = 2113;
pub const SCI_AUTOCGETCHOOSESINGLE: ::std::os::raw::c_uint = 2114;
pub const SCI_AUTOCSETIGNORECASE: ::std::os::raw::c_uint = 2115;
pub const SCI_AUTOCGETIGNORECASE: ::std::os::raw::c_uint = 2116;
pub const SCI_USERLISTSHOW: ::std::os::raw::c_uint = 2117;
pub const SCI_AUTOCSETAUTOHIDE: ::std::os::raw::c_uint = 2118;
pub const SCI_AUTOCGETAUTOHIDE: ::std::os::raw::c_uint = 2119;
pub const SCI_AUTOCSETDROPRESTOFWORD: ::std::os::raw::c_uint = 2270;
pub const SCI_AUTOCGETDROPRESTOFWORD: ::std::os::raw::c_uint = 2271;
pub const SCI_REGISTERIMAGE: ::std::os::raw::c_uint = 2405;
pub const SCI_CLEARREGISTEREDIMAGES: ::std::os::raw::c_uint = 2408;
pub const SCI_AUTOCGETTYPESEPARATOR: ::std::os::raw::c_uint = 2285;
pub const SCI_AUTOCSETTYPESEPARATOR: ::std::os::raw::c_uint = 2286;
pub const SCI_AUTOCSETMAXWIDTH: ::std::os::raw::c_uint = 2208;
pub const SCI_AUTOCGETMAXWIDTH: ::std::os::raw::c_uint = 2209;
pub const SCI_AUTOCSETMAXHEIGHT: ::std::os::raw::c_uint = 2210;
pub const SCI_AUTOCGETMAXHEIGHT: ::std::os::raw::c_uint = 2211;
pub const SCI_SETINDENT: ::std::os::raw::c_uint = 2122;
pub const SCI_GETINDENT: ::std::os::raw::c_uint = 2123;
pub const SCI_SETUSETABS: ::std::os::raw::c_uint = 2124;
pub const SCI_GETUSETABS: ::std::os::raw::c_uint = 2125;
pub const SCI_SETLINEINDENTATION: ::std::os::raw::c_uint = 2126;
pub const SCI_GETLINEINDENTATION: ::std::os::raw::c_uint = 2127;
pub const SCI_GETLINEINDENTPOSITION: ::std::os::raw::c_uint = 2128;
pub const SCI_GETCOLUMN: ::std::os::raw::c_uint = 2129;
pub const SCI_COUNTCHARACTERS: ::std::os::raw::c_uint = 2633;
pub const SCI_SETHSCROLLBAR: ::std::os::raw::c_uint = 2130;
pub const SCI_GETHSCROLLBAR: ::std::os::raw::c_uint = 2131;
pub const SC_IV_NONE: ::std::os::raw::c_uint = 0;
pub const SC_IV_REAL: ::std::os::raw::c_uint = 1;
pub const SC_IV_LOOKFORWARD: ::std::os::raw::c_uint = 2;
pub const SC_IV_LOOKBOTH: ::std::os::raw::c_uint = 3;
pub const SCI_SETINDENTATIONGUIDES: ::std::os::raw::c_uint = 2132;
pub const SCI_GETINDENTATIONGUIDES: ::std::os::raw::c_uint = 2133;
pub const SCI_SETHIGHLIGHTGUIDE: ::std::os::raw::c_uint = 2134;
pub const SCI_GETHIGHLIGHTGUIDE: ::std::os::raw::c_uint = 2135;
pub const SCI_GETLINEENDPOSITION: ::std::os::raw::c_uint = 2136;
pub const SCI_GETCODEPAGE: ::std::os::raw::c_uint = 2137;
pub const SCI_GETCARETFORE: ::std::os::raw::c_uint = 2138;
pub const SCI_GETREADONLY: ::std::os::raw::c_uint = 2140;
pub const SCI_SETCURRENTPOS: ::std::os::raw::c_uint = 2141;
pub const SCI_SETSELECTIONSTART: ::std::os::raw::c_uint = 2142;
pub const SCI_GETSELECTIONSTART: ::std::os::raw::c_uint = 2143;
pub const SCI_SETSELECTIONEND: ::std::os::raw::c_uint = 2144;
pub const SCI_GETSELECTIONEND: ::std::os::raw::c_uint = 2145;
pub const SCI_SETEMPTYSELECTION: ::std::os::raw::c_uint = 2556;
pub const SCI_SETPRINTMAGNIFICATION: ::std::os::raw::c_uint = 2146;
pub const SCI_GETPRINTMAGNIFICATION: ::std::os::raw::c_uint = 2147;
pub const SC_PRINT_NORMAL: ::std::os::raw::c_uint = 0;
pub const SC_PRINT_INVERTLIGHT: ::std::os::raw::c_uint = 1;
pub const SC_PRINT_BLACKONWHITE: ::std::os::raw::c_uint = 2;
pub const SC_PRINT_COLOURONWHITE: ::std::os::raw::c_uint = 3;
pub const SC_PRINT_COLOURONWHITEDEFAULTBG: ::std::os::raw::c_uint = 4;
pub const SCI_SETPRINTCOLOURMODE: ::std::os::raw::c_uint = 2148;
pub const SCI_GETPRINTCOLOURMODE: ::std::os::raw::c_uint = 2149;
pub const SCFIND_WHOLEWORD: ::std::os::raw::c_uint = 2;
pub const SCFIND_MATCHCASE: ::std::os::raw::c_uint = 4;
pub const SCFIND_WORDSTART: ::std::os::raw::c_uint = 1048576;
pub const SCFIND_REGEXP: ::std::os::raw::c_uint = 2097152;
pub const SCFIND_POSIX: ::std::os::raw::c_uint = 4194304;
pub const SCFIND_CXX11REGEX: ::std::os::raw::c_uint = 8388608;
pub const SCI_FINDTEXT: ::std::os::raw::c_uint = 2150;
pub const SCI_FORMATRANGE: ::std::os::raw::c_uint = 2151;
pub const SCI_GETFIRSTVISIBLELINE: ::std::os::raw::c_uint = 2152;
pub const SCI_GETLINE: ::std::os::raw::c_uint = 2153;
pub const SCI_GETLINECOUNT: ::std::os::raw::c_uint = 2154;
pub const SCI_SETMARGINLEFT: ::std::os::raw::c_uint = 2155;
pub const SCI_GETMARGINLEFT: ::std::os::raw::c_uint = 2156;
pub const SCI_SETMARGINRIGHT: ::std::os::raw::c_uint = 2157;
pub const SCI_GETMARGINRIGHT: ::std::os::raw::c_uint = 2158;
pub const SCI_GETMODIFY: ::std::os::raw::c_uint = 2159;
pub const SCI_SETSEL: ::std::os::raw::c_uint = 2160;
pub const SCI_GETSELTEXT: ::std::os::raw::c_uint = 2161;
pub const SCI_GETTEXTRANGE: ::std::os::raw::c_uint = 2162;
pub const SCI_HIDESELECTION: ::std::os::raw::c_uint = 2163;
pub const SCI_POINTXFROMPOSITION: ::std::os::raw::c_uint = 2164;
pub const SCI_POINTYFROMPOSITION: ::std::os::raw::c_uint = 2165;
pub const SCI_LINEFROMPOSITION: ::std::os::raw::c_uint = 2166;
pub const SCI_POSITIONFROMLINE: ::std::os::raw::c_uint = 2167;
pub const SCI_LINESCROLL: ::std::os::raw::c_uint = 2168;
pub const SCI_SCROLLCARET: ::std::os::raw::c_uint = 2169;
pub const SCI_SCROLLRANGE: ::std::os::raw::c_uint = 2569;
pub const SCI_REPLACESEL: ::std::os::raw::c_uint = 2170;
pub const SCI_SETREADONLY: ::std::os::raw::c_uint = 2171;
pub const SCI_NULL: ::std::os::raw::c_uint = 2172;
pub const SCI_CANPASTE: ::std::os::raw::c_uint = 2173;
pub const SCI_CANUNDO: ::std::os::raw::c_uint = 2174;
pub const SCI_EMPTYUNDOBUFFER: ::std::os::raw::c_uint = 2175;
pub const SCI_UNDO: ::std::os::raw::c_uint = 2176;
pub const SCI_CUT: ::std::os::raw::c_uint = 2177;
pub const SCI_COPY: ::std::os::raw::c_uint = 2178;
pub const SCI_PASTE: ::std::os::raw::c_uint = 2179;
pub const SCI_CLEAR: ::std::os::raw::c_uint = 2180;
pub const SCI_SETTEXT: ::std::os::raw::c_uint = 2181;
pub const SCI_GETTEXT: ::std::os::raw::c_uint = 2182;
pub const SCI_GETTEXTLENGTH: ::std::os::raw::c_uint = 2183;
pub const SCI_GETDIRECTFUNCTION: ::std::os::raw::c_uint = 2184;
pub const SCI_GETDIRECTPOINTER: ::std::os::raw::c_uint = 2185;
pub const SCI_SETOVERTYPE: ::std::os::raw::c_uint = 2186;
pub const SCI_GETOVERTYPE: ::std::os::raw::c_uint = 2187;
pub const SCI_SETCARETWIDTH: ::std::os::raw::c_uint = 2188;
pub const SCI_GETCARETWIDTH: ::std::os::raw::c_uint = 2189;
pub const SCI_SETTARGETSTART: ::std::os::raw::c_uint = 2190;
pub const SCI_GETTARGETSTART: ::std::os::raw::c_uint = 2191;
pub const SCI_SETTARGETEND: ::std::os::raw::c_uint = 2192;
pub const SCI_GETTARGETEND: ::std::os::raw::c_uint = 2193;
pub const SCI_SETTARGETRANGE: ::std::os::raw::c_uint = 2686;
pub const SCI_GETTARGETTEXT: ::std::os::raw::c_uint = 2687;
pub const SCI_TARGETFROMSELECTION: ::std::os::raw::c_uint = 2287;
pub const SCI_TARGETWHOLEDOCUMENT: ::std::os::raw::c_uint = 2690;
pub const SCI_REPLACETARGET: ::std::os::raw::c_uint = 2194;
pub const SCI_REPLACETARGETRE: ::std::os::raw::c_uint = 2195;
pub const SCI_SEARCHINTARGET: ::std::os::raw::c_uint = 2197;
pub const SCI_SETSEARCHFLAGS: ::std::os::raw::c_uint = 2198;
pub const SCI_GETSEARCHFLAGS: ::std::os::raw::c_uint = 2199;
pub const SCI_CALLTIPSHOW: ::std::os::raw::c_uint = 2200;
pub const SCI_CALLTIPCANCEL: ::std::os::raw::c_uint = 2201;
pub const SCI_CALLTIPACTIVE: ::std::os::raw::c_uint = 2202;
pub const SCI_CALLTIPPOSSTART: ::std::os::raw::c_uint = 2203;
pub const SCI_CALLTIPSETPOSSTART: ::std::os::raw::c_uint = 2214;
pub const SCI_CALLTIPSETHLT: ::std::os::raw::c_uint = 2204;
pub const SCI_CALLTIPSETBACK: ::std::os::raw::c_uint = 2205;
pub const SCI_CALLTIPSETFORE: ::std::os::raw::c_uint = 2206;
pub const SCI_CALLTIPSETFOREHLT: ::std::os::raw::c_uint = 2207;
pub const SCI_CALLTIPUSESTYLE: ::std::os::raw::c_uint = 2212;
pub const SCI_CALLTIPSETPOSITION: ::std::os::raw::c_uint = 2213;
pub const SCI_VISIBLEFROMDOCLINE: ::std::os::raw::c_uint = 2220;
pub const SCI_DOCLINEFROMVISIBLE: ::std::os::raw::c_uint = 2221;
pub const SCI_WRAPCOUNT: ::std::os::raw::c_uint = 2235;
pub const SC_FOLDLEVELBASE: ::std::os::raw::c_uint = 1024;
pub const SC_FOLDLEVELWHITEFLAG: ::std::os::raw::c_uint = 4096;
pub const SC_FOLDLEVELHEADERFLAG: ::std::os::raw::c_uint = 8192;
pub const SC_FOLDLEVELNUMBERMASK: ::std::os::raw::c_uint = 4095;
pub const SCI_SETFOLDLEVEL: ::std::os::raw::c_uint = 2222;
pub const SCI_GETFOLDLEVEL: ::std::os::raw::c_uint = 2223;
pub const SCI_GETLASTCHILD: ::std::os::raw::c_uint = 2224;
pub const SCI_GETFOLDPARENT: ::std::os::raw::c_uint = 2225;
pub const SCI_SHOWLINES: ::std::os::raw::c_uint = 2226;
pub const SCI_HIDELINES: ::std::os::raw::c_uint = 2227;
pub const SCI_GETLINEVISIBLE: ::std::os::raw::c_uint = 2228;
pub const SCI_GETALLLINESVISIBLE: ::std::os::raw::c_uint = 2236;
pub const SCI_SETFOLDEXPANDED: ::std::os::raw::c_uint = 2229;
pub const SCI_GETFOLDEXPANDED: ::std::os::raw::c_uint = 2230;
pub const SCI_TOGGLEFOLD: ::std::os::raw::c_uint = 2231;
pub const SCI_TOGGLEFOLDSHOWTEXT: ::std::os::raw::c_uint = 2700;
pub const SC_FOLDDISPLAYTEXT_HIDDEN: ::std::os::raw::c_uint = 0;
pub const SC_FOLDDISPLAYTEXT_STANDARD: ::std::os::raw::c_uint = 1;
pub const SC_FOLDDISPLAYTEXT_BOXED: ::std::os::raw::c_uint = 2;
pub const SCI_FOLDDISPLAYTEXTSETSTYLE: ::std::os::raw::c_uint = 2701;
pub const SC_FOLDACTION_CONTRACT: ::std::os::raw::c_uint = 0;
pub const SC_FOLDACTION_EXPAND: ::std::os::raw::c_uint = 1;
pub const SC_FOLDACTION_TOGGLE: ::std::os::raw::c_uint = 2;
pub const SCI_FOLDLINE: ::std::os::raw::c_uint = 2237;
pub const SCI_FOLDCHILDREN: ::std::os::raw::c_uint = 2238;
pub const SCI_EXPANDCHILDREN: ::std::os::raw::c_uint = 2239;
pub const SCI_FOLDALL: ::std::os::raw::c_uint = 2662;
pub const SCI_ENSUREVISIBLE: ::std::os::raw::c_uint = 2232;
pub const SC_AUTOMATICFOLD_SHOW: ::std::os::raw::c_uint = 1;
pub const SC_AUTOMATICFOLD_CLICK: ::std::os::raw::c_uint = 2;
pub const SC_AUTOMATICFOLD_CHANGE: ::std::os::raw::c_uint = 4;
pub const SCI_SETAUTOMATICFOLD: ::std::os::raw::c_uint = 2663;
pub const SCI_GETAUTOMATICFOLD: ::std::os::raw::c_uint = 2664;
pub const SC_FOLDFLAG_LINEBEFORE_EXPANDED: ::std::os::raw::c_uint = 2;
pub const SC_FOLDFLAG_LINEBEFORE_CONTRACTED: ::std::os::raw::c_uint = 4;
pub const SC_FOLDFLAG_LINEAFTER_EXPANDED: ::std::os::raw::c_uint = 8;
pub const SC_FOLDFLAG_LINEAFTER_CONTRACTED: ::std::os::raw::c_uint = 16;
pub const SC_FOLDFLAG_LEVELNUMBERS: ::std::os::raw::c_uint = 64;
pub const SC_FOLDFLAG_LINESTATE: ::std::os::raw::c_uint = 128;
pub const SCI_SETFOLDFLAGS: ::std::os::raw::c_uint = 2233;
pub const SCI_ENSUREVISIBLEENFORCEPOLICY: ::std::os::raw::c_uint = 2234;
pub const SCI_SETTABINDENTS: ::std::os::raw::c_uint = 2260;
pub const SCI_GETTABINDENTS: ::std::os::raw::c_uint = 2261;
pub const SCI_SETBACKSPACEUNINDENTS: ::std::os::raw::c_uint = 2262;
pub const SCI_GETBACKSPACEUNINDENTS: ::std::os::raw::c_uint = 2263;
pub const SC_TIME_FOREVER: ::std::os::raw::c_uint = 10000000;
pub const SCI_SETMOUSEDWELLTIME: ::std::os::raw::c_uint = 2264;
pub const SCI_GETMOUSEDWELLTIME: ::std::os::raw::c_uint = 2265;
pub const SCI_WORDSTARTPOSITION: ::std::os::raw::c_uint = 2266;
pub const SCI_WORDENDPOSITION: ::std::os::raw::c_uint = 2267;
pub const SCI_ISRANGEWORD: ::std::os::raw::c_uint = 2691;
pub const SC_IDLESTYLING_NONE: ::std::os::raw::c_uint = 0;
pub const SC_IDLESTYLING_TOVISIBLE: ::std::os::raw::c_uint = 1;
pub const SC_IDLESTYLING_AFTERVISIBLE: ::std::os::raw::c_uint = 2;
pub const SC_IDLESTYLING_ALL: ::std::os::raw::c_uint = 3;
pub const SCI_SETIDLESTYLING: ::std::os::raw::c_uint = 2692;
pub const SCI_GETIDLESTYLING: ::std::os::raw::c_uint = 2693;
pub const SC_WRAP_NONE: ::std::os::raw::c_uint = 0;
pub const SC_WRAP_WORD: ::std::os::raw::c_uint = 1;
pub const SC_WRAP_CHAR: ::std::os::raw::c_uint = 2;
pub const SC_WRAP_WHITESPACE: ::std::os::raw::c_uint = 3;
pub const SCI_SETWRAPMODE: ::std::os::raw::c_uint = 2268;
pub const SCI_GETWRAPMODE: ::std::os::raw::c_uint = 2269;
pub const SC_WRAPVISUALFLAG_NONE: ::std::os::raw::c_uint = 0;
pub const SC_WRAPVISUALFLAG_END: ::std::os::raw::c_uint = 1;
pub const SC_WRAPVISUALFLAG_START: ::std::os::raw::c_uint = 2;
pub const SC_WRAPVISUALFLAG_MARGIN: ::std::os::raw::c_uint = 4;
pub const SCI_SETWRAPVISUALFLAGS: ::std::os::raw::c_uint = 2460;
pub const SCI_GETWRAPVISUALFLAGS: ::std::os::raw::c_uint = 2461;
pub const SC_WRAPVISUALFLAGLOC_DEFAULT: ::std::os::raw::c_uint = 0;
pub const SC_WRAPVISUALFLAGLOC_END_BY_TEXT: ::std::os::raw::c_uint = 1;
pub const SC_WRAPVISUALFLAGLOC_START_BY_TEXT: ::std::os::raw::c_uint = 2;
pub const SCI_SETWRAPVISUALFLAGSLOCATION: ::std::os::raw::c_uint = 2462;
pub const SCI_GETWRAPVISUALFLAGSLOCATION: ::std::os::raw::c_uint = 2463;
pub const SCI_SETWRAPSTARTINDENT: ::std::os::raw::c_uint = 2464;
pub const SCI_GETWRAPSTARTINDENT: ::std::os::raw::c_uint = 2465;
pub const SC_WRAPINDENT_FIXED: ::std::os::raw::c_uint = 0;
pub const SC_WRAPINDENT_SAME: ::std::os::raw::c_uint = 1;
pub const SC_WRAPINDENT_INDENT: ::std::os::raw::c_uint = 2;
pub const SCI_SETWRAPINDENTMODE: ::std::os::raw::c_uint = 2472;
pub const SCI_GETWRAPINDENTMODE: ::std::os::raw::c_uint = 2473;
pub const SC_CACHE_NONE: ::std::os::raw::c_uint = 0;
pub const SC_CACHE_CARET: ::std::os::raw::c_uint = 1;
pub const SC_CACHE_PAGE: ::std::os::raw::c_uint = 2;
pub const SC_CACHE_DOCUMENT: ::std::os::raw::c_uint = 3;
pub const SCI_SETLAYOUTCACHE: ::std::os::raw::c_uint = 2272;
pub const SCI_GETLAYOUTCACHE: ::std::os::raw::c_uint = 2273;
pub const SCI_SETSCROLLWIDTH: ::std::os::raw::c_uint = 2274;
pub const SCI_GETSCROLLWIDTH: ::std::os::raw::c_uint = 2275;
pub const SCI_SETSCROLLWIDTHTRACKING: ::std::os::raw::c_uint = 2516;
pub const SCI_GETSCROLLWIDTHTRACKING: ::std::os::raw::c_uint = 2517;
pub const SCI_TEXTWIDTH: ::std::os::raw::c_uint = 2276;
pub const SCI_SETENDATLASTLINE: ::std::os::raw::c_uint = 2277;
pub const SCI_GETENDATLASTLINE: ::std::os::raw::c_uint = 2278;
pub const SCI_TEXTHEIGHT: ::std::os::raw::c_uint = 2279;
pub const SCI_SETVSCROLLBAR: ::std::os::raw::c_uint = 2280;
pub const SCI_GETVSCROLLBAR: ::std::os::raw::c_uint = 2281;
pub const SCI_APPENDTEXT: ::std::os::raw::c_uint = 2282;
pub const SC_PHASES_ONE: ::std::os::raw::c_uint = 0;
pub const SC_PHASES_TWO: ::std::os::raw::c_uint = 1;
pub const SC_PHASES_MULTIPLE: ::std::os::raw::c_uint = 2;
pub const SCI_GETPHASESDRAW: ::std::os::raw::c_uint = 2673;
pub const SCI_SETPHASESDRAW: ::std::os::raw::c_uint = 2674;
pub const SC_EFF_QUALITY_MASK: ::std::os::raw::c_uint = 15;
pub const SC_EFF_QUALITY_DEFAULT: ::std::os::raw::c_uint = 0;
pub const SC_EFF_QUALITY_NON_ANTIALIASED: ::std::os::raw::c_uint = 1;
pub const SC_EFF_QUALITY_ANTIALIASED: ::std::os::raw::c_uint = 2;
pub const SC_EFF_QUALITY_LCD_OPTIMIZED: ::std::os::raw::c_uint = 3;
pub const SCI_SETFONTQUALITY: ::std::os::raw::c_uint = 2611;
pub const SCI_GETFONTQUALITY: ::std::os::raw::c_uint = 2612;
pub const SCI_SETFIRSTVISIBLELINE: ::std::os::raw::c_uint = 2613;
pub const SC_MULTIPASTE_ONCE: ::std::os::raw::c_uint = 0;
pub const SC_MULTIPASTE_EACH: ::std::os::raw::c_uint = 1;
pub const SCI_SETMULTIPASTE: ::std::os::raw::c_uint = 2614;
pub const SCI_GETMULTIPASTE: ::std::os::raw::c_uint = 2615;
pub const SCI_GETTAG: ::std::os::raw::c_uint = 2616;
pub const SCI_LINESJOIN: ::std::os::raw::c_uint = 2288;
pub const SCI_LINESSPLIT: ::std::os::raw::c_uint = 2289;
pub const SCI_SETFOLDMARGINCOLOUR: ::std::os::raw::c_uint = 2290;
pub const SCI_SETFOLDMARGINHICOLOUR: ::std::os::raw::c_uint = 2291;
pub const SC_ACCESSIBILITY_DISABLED: ::std::os::raw::c_uint = 0;
pub const SC_ACCESSIBILITY_ENABLED: ::std::os::raw::c_uint = 1;
pub const SCI_SETACCESSIBILITY: ::std::os::raw::c_uint = 2702;
pub const SCI_GETACCESSIBILITY: ::std::os::raw::c_uint = 2703;
pub const SCI_LINEDOWN: ::std::os::raw::c_uint = 2300;
pub const SCI_LINEDOWNEXTEND: ::std::os::raw::c_uint = 2301;
pub const SCI_LINEUP: ::std::os::raw::c_uint = 2302;
pub const SCI_LINEUPEXTEND: ::std::os::raw::c_uint = 2303;
pub const SCI_CHARLEFT: ::std::os::raw::c_uint = 2304;
pub const SCI_CHARLEFTEXTEND: ::std::os::raw::c_uint = 2305;
pub const SCI_CHARRIGHT: ::std::os::raw::c_uint = 2306;
pub const SCI_CHARRIGHTEXTEND: ::std::os::raw::c_uint = 2307;
pub const SCI_WORDLEFT: ::std::os::raw::c_uint = 2308;
pub const SCI_WORDLEFTEXTEND: ::std::os::raw::c_uint = 2309;
pub const SCI_WORDRIGHT: ::std::os::raw::c_uint = 2310;
pub const SCI_WORDRIGHTEXTEND: ::std::os::raw::c_uint = 2311;
pub const SCI_HOME: ::std::os::raw::c_uint = 2312;
pub const SCI_HOMEEXTEND: ::std::os::raw::c_uint = 2313;
pub const SCI_LINEEND: ::std::os::raw::c_uint = 2314;
pub const SCI_LINEENDEXTEND: ::std::os::raw::c_uint = 2315;
pub const SCI_DOCUMENTSTART: ::std::os::raw::c_uint = 2316;
pub const SCI_DOCUMENTSTARTEXTEND: ::std::os::raw::c_uint = 2317;
pub const SCI_DOCUMENTEND: ::std::os::raw::c_uint = 2318;
pub const SCI_DOCUMENTENDEXTEND: ::std::os::raw::c_uint = 2319;
pub const SCI_PAGEUP: ::std::os::raw::c_uint = 2320;
pub const SCI_PAGEUPEXTEND: ::std::os::raw::c_uint = 2321;
pub const SCI_PAGEDOWN: ::std::os::raw::c_uint = 2322;
pub const SCI_PAGEDOWNEXTEND: ::std::os::raw::c_uint = 2323;
pub const SCI_EDITTOGGLEOVERTYPE: ::std::os::raw::c_uint = 2324;
pub const SCI_CANCEL: ::std::os::raw::c_uint = 2325;
pub const SCI_DELETEBACK: ::std::os::raw::c_uint = 2326;
pub const SCI_TAB: ::std::os::raw::c_uint = 2327;
pub const SCI_BACKTAB: ::std::os::raw::c_uint = 2328;
pub const SCI_NEWLINE: ::std::os::raw::c_uint = 2329;
pub const SCI_FORMFEED: ::std::os::raw::c_uint = 2330;
pub const SCI_VCHOME: ::std::os::raw::c_uint = 2331;
pub const SCI_VCHOMEEXTEND: ::std::os::raw::c_uint = 2332;
pub const SCI_ZOOMIN: ::std::os::raw::c_uint = 2333;
pub const SCI_ZOOMOUT: ::std::os::raw::c_uint = 2334;
pub const SCI_DELWORDLEFT: ::std::os::raw::c_uint = 2335;
pub const SCI_DELWORDRIGHT: ::std::os::raw::c_uint = 2336;
pub const SCI_DELWORDRIGHTEND: ::std::os::raw::c_uint = 2518;
pub const SCI_LINECUT: ::std::os::raw::c_uint = 2337;
pub const SCI_LINEDELETE: ::std::os::raw::c_uint = 2338;
pub const SCI_LINETRANSPOSE: ::std::os::raw::c_uint = 2339;
pub const SCI_LINEREVERSE: ::std::os::raw::c_uint = 2354;
pub const SCI_LINEDUPLICATE: ::std::os::raw::c_uint = 2404;
pub const SCI_LOWERCASE: ::std::os::raw::c_uint = 2340;
pub const SCI_UPPERCASE: ::std::os::raw::c_uint = 2341;
pub const SCI_LINESCROLLDOWN: ::std::os::raw::c_uint = 2342;
pub const SCI_LINESCROLLUP: ::std::os::raw::c_uint = 2343;
pub const SCI_DELETEBACKNOTLINE: ::std::os::raw::c_uint = 2344;
pub const SCI_HOMEDISPLAY: ::std::os::raw::c_uint = 2345;
pub const SCI_HOMEDISPLAYEXTEND: ::std::os::raw::c_uint = 2346;
pub const SCI_LINEENDDISPLAY: ::std::os::raw::c_uint = 2347;
pub const SCI_LINEENDDISPLAYEXTEND: ::std::os::raw::c_uint = 2348;
pub const SCI_HOMEWRAP: ::std::os::raw::c_uint = 2349;
pub const SCI_HOMEWRAPEXTEND: ::std::os::raw::c_uint = 2450;
pub const SCI_LINEENDWRAP: ::std::os::raw::c_uint = 2451;
pub const SCI_LINEENDWRAPEXTEND: ::std::os::raw::c_uint = 2452;
pub const SCI_VCHOMEWRAP: ::std::os::raw::c_uint = 2453;
pub const SCI_VCHOMEWRAPEXTEND: ::std::os::raw::c_uint = 2454;
pub const SCI_LINECOPY: ::std::os::raw::c_uint = 2455;
pub const SCI_MOVECARETINSIDEVIEW: ::std::os::raw::c_uint = 2401;
pub const SCI_LINELENGTH: ::std::os::raw::c_uint = 2350;
pub const SCI_BRACEHIGHLIGHT: ::std::os::raw::c_uint = 2351;
pub const SCI_BRACEHIGHLIGHTINDICATOR: ::std::os::raw::c_uint = 2498;
pub const SCI_BRACEBADLIGHT: ::std::os::raw::c_uint = 2352;
pub const SCI_BRACEBADLIGHTINDICATOR: ::std::os::raw::c_uint = 2499;
pub const SCI_BRACEMATCH: ::std::os::raw::c_uint = 2353;
pub const SCI_GETVIEWEOL: ::std::os::raw::c_uint = 2355;
pub const SCI_SETVIEWEOL: ::std::os::raw::c_uint = 2356;
pub const SCI_GETDOCPOINTER: ::std::os::raw::c_uint = 2357;
pub const SCI_SETDOCPOINTER: ::std::os::raw::c_uint = 2358;
pub const SCI_SETMODEVENTMASK: ::std::os::raw::c_uint = 2359;
pub const EDGE_NONE: ::std::os::raw::c_uint = 0;
pub const EDGE_LINE: ::std::os::raw::c_uint = 1;
pub const EDGE_BACKGROUND: ::std::os::raw::c_uint = 2;
pub const EDGE_MULTILINE: ::std::os::raw::c_uint = 3;
pub const SCI_GETEDGECOLUMN: ::std::os::raw::c_uint = 2360;
pub const SCI_SETEDGECOLUMN: ::std::os::raw::c_uint = 2361;
pub const SCI_GETEDGEMODE: ::std::os::raw::c_uint = 2362;
pub const SCI_SETEDGEMODE: ::std::os::raw::c_uint = 2363;
pub const SCI_GETEDGECOLOUR: ::std::os::raw::c_uint = 2364;
pub const SCI_SETEDGECOLOUR: ::std::os::raw::c_uint = 2365;
pub const SCI_MULTIEDGEADDLINE: ::std::os::raw::c_uint = 2694;
pub const SCI_MULTIEDGECLEARALL: ::std::os::raw::c_uint = 2695;
pub const SCI_SEARCHANCHOR: ::std::os::raw::c_uint = 2366;
pub const SCI_SEARCHNEXT: ::std::os::raw::c_uint = 2367;
pub const SCI_SEARCHPREV: ::std::os::raw::c_uint = 2368;
pub const SCI_LINESONSCREEN: ::std::os::raw::c_uint = 2370;
pub const SC_POPUP_NEVER: ::std::os::raw::c_uint = 0;
pub const SC_POPUP_ALL: ::std::os::raw::c_uint = 1;
pub const SC_POPUP_TEXT: ::std::os::raw::c_uint = 2;
pub const SCI_USEPOPUP: ::std::os::raw::c_uint = 2371;
pub const SCI_SELECTIONISRECTANGLE: ::std::os::raw::c_uint = 2372;
pub const SCI_SETZOOM: ::std::os::raw::c_uint = 2373;
pub const SCI_GETZOOM: ::std::os::raw::c_uint = 2374;
pub const SCI_CREATEDOCUMENT: ::std::os::raw::c_uint = 2375;
pub const SCI_ADDREFDOCUMENT: ::std::os::raw::c_uint = 2376;
pub const SCI_RELEASEDOCUMENT: ::std::os::raw::c_uint = 2377;
pub const SCI_GETMODEVENTMASK: ::std::os::raw::c_uint = 2378;
pub const SCI_SETFOCUS: ::std::os::raw::c_uint = 2380;
pub const SCI_GETFOCUS: ::std::os::raw::c_uint = 2381;
pub const SC_STATUS_OK: ::std::os::raw::c_uint = 0;
pub const SC_STATUS_FAILURE: ::std::os::raw::c_uint = 1;
pub const SC_STATUS_BADALLOC: ::std::os::raw::c_uint = 2;
pub const SC_STATUS_WARN_START: ::std::os::raw::c_uint = 1000;
pub const SC_STATUS_WARN_REGEX: ::std::os::raw::c_uint = 1001;
pub const SCI_SETSTATUS: ::std::os::raw::c_uint = 2382;
pub const SCI_GETSTATUS: ::std::os::raw::c_uint = 2383;
pub const SCI_SETMOUSEDOWNCAPTURES: ::std::os::raw::c_uint = 2384;
pub const SCI_GETMOUSEDOWNCAPTURES: ::std::os::raw::c_uint = 2385;
pub const SCI_SETMOUSEWHEELCAPTURES: ::std::os::raw::c_uint = 2696;
pub const SCI_GETMOUSEWHEELCAPTURES: ::std::os::raw::c_uint = 2697;
pub const SC_CURSORNORMAL: ::std::os::raw::c_int = -1;
pub const SC_CURSORARROW: ::std::os::raw::c_uint = 2;
pub const SC_CURSORWAIT: ::std::os::raw::c_uint = 4;
pub const SC_CURSORREVERSEARROW: ::std::os::raw::c_uint = 7;
pub const SCI_SETCURSOR: ::std::os::raw::c_uint = 2386;
pub const SCI_GETCURSOR: ::std::os::raw::c_uint = 2387;
pub const SCI_SETCONTROLCHARSYMBOL: ::std::os::raw::c_uint = 2388;
pub const SCI_GETCONTROLCHARSYMBOL: ::std::os::raw::c_uint = 2389;
pub const SCI_WORDPARTLEFT: ::std::os::raw::c_uint = 2390;
pub const SCI_WORDPARTLEFTEXTEND: ::std::os::raw::c_uint = 2391;
pub const SCI_WORDPARTRIGHT: ::std::os::raw::c_uint = 2392;
pub const SCI_WORDPARTRIGHTEXTEND: ::std::os::raw::c_uint = 2393;
pub const VISIBLE_SLOP: ::std::os::raw::c_uint = 1;
pub const VISIBLE_STRICT: ::std::os::raw::c_uint = 4;
pub const SCI_SETVISIBLEPOLICY: ::std::os::raw::c_uint = 2394;
pub const SCI_DELLINELEFT: ::std::os::raw::c_uint = 2395;
pub const SCI_DELLINERIGHT: ::std::os::raw::c_uint = 2396;
pub const SCI_SETXOFFSET: ::std::os::raw::c_uint = 2397;
pub const SCI_GETXOFFSET: ::std::os::raw::c_uint = 2398;
pub const SCI_CHOOSECARETX: ::std::os::raw::c_uint = 2399;
pub const SCI_GRABFOCUS: ::std::os::raw::c_uint = 2400;
pub const CARET_SLOP: ::std::os::raw::c_uint = 1;
pub const CARET_STRICT: ::std::os::raw::c_uint = 4;
pub const CARET_JUMPS: ::std::os::raw::c_uint = 16;
pub const CARET_EVEN: ::std::os::raw::c_uint = 8;
pub const SCI_SETXCARETPOLICY: ::std::os::raw::c_uint = 2402;
pub const SCI_SETYCARETPOLICY: ::std::os::raw::c_uint = 2403;
pub const SCI_SETPRINTWRAPMODE: ::std::os::raw::c_uint = 2406;
pub const SCI_GETPRINTWRAPMODE: ::std::os::raw::c_uint = 2407;
pub const SCI_SETHOTSPOTACTIVEFORE: ::std::os::raw::c_uint = 2410;
pub const SCI_GETHOTSPOTACTIVEFORE: ::std::os::raw::c_uint = 2494;
pub const SCI_SETHOTSPOTACTIVEBACK: ::std::os::raw::c_uint = 2411;
pub const SCI_GETHOTSPOTACTIVEBACK: ::std::os::raw::c_uint = 2495;
pub const SCI_SETHOTSPOTACTIVEUNDERLINE: ::std::os::raw::c_uint = 2412;
pub const SCI_GETHOTSPOTACTIVEUNDERLINE: ::std::os::raw::c_uint = 2496;
pub const SCI_SETHOTSPOTSINGLELINE: ::std::os::raw::c_uint = 2421;
pub const SCI_GETHOTSPOTSINGLELINE: ::std::os::raw::c_uint = 2497;
pub const SCI_PARADOWN: ::std::os::raw::c_uint = 2413;
pub const SCI_PARADOWNEXTEND: ::std::os::raw::c_uint = 2414;
pub const SCI_PARAUP: ::std::os::raw::c_uint = 2415;
pub const SCI_PARAUPEXTEND: ::std::os::raw::c_uint = 2416;
pub const SCI_POSITIONBEFORE: ::std::os::raw::c_uint = 2417;
pub const SCI_POSITIONAFTER: ::std::os::raw::c_uint = 2418;
pub const SCI_POSITIONRELATIVE: ::std::os::raw::c_uint = 2670;
pub const SCI_COPYRANGE: ::std::os::raw::c_uint = 2419;
pub const SCI_COPYTEXT: ::std::os::raw::c_uint = 2420;
pub const SC_SEL_STREAM: ::std::os::raw::c_uint = 0;
pub const SC_SEL_RECTANGLE: ::std::os::raw::c_uint = 1;
pub const SC_SEL_LINES: ::std::os::raw::c_uint = 2;
pub const SC_SEL_THIN: ::std::os::raw::c_uint = 3;
pub const SCI_SETSELECTIONMODE: ::std::os::raw::c_uint = 2422;
pub const SCI_GETSELECTIONMODE: ::std::os::raw::c_uint = 2423;
pub const SCI_GETMOVEEXTENDSSELECTION: ::std::os::raw::c_uint = 2706;
pub const SCI_GETLINESELSTARTPOSITION: ::std::os::raw::c_uint = 2424;
pub const SCI_GETLINESELENDPOSITION: ::std::os::raw::c_uint = 2425;
pub const SCI_LINEDOWNRECTEXTEND: ::std::os::raw::c_uint = 2426;
pub const SCI_LINEUPRECTEXTEND: ::std::os::raw::c_uint = 2427;
pub const SCI_CHARLEFTRECTEXTEND: ::std::os::raw::c_uint = 2428;
pub const SCI_CHARRIGHTRECTEXTEND: ::std::os::raw::c_uint = 2429;
pub const SCI_HOMERECTEXTEND: ::std::os::raw::c_uint = 2430;
pub const SCI_VCHOMERECTEXTEND: ::std::os::raw::c_uint = 2431;
pub const SCI_LINEENDRECTEXTEND: ::std::os::raw::c_uint = 2432;
pub const SCI_PAGEUPRECTEXTEND: ::std::os::raw::c_uint = 2433;
pub const SCI_PAGEDOWNRECTEXTEND: ::std::os::raw::c_uint = 2434;
pub const SCI_STUTTEREDPAGEUP: ::std::os::raw::c_uint = 2435;
pub const SCI_STUTTEREDPAGEUPEXTEND: ::std::os::raw::c_uint = 2436;
pub const SCI_STUTTEREDPAGEDOWN: ::std::os::raw::c_uint = 2437;
pub const SCI_STUTTEREDPAGEDOWNEXTEND: ::std::os::raw::c_uint = 2438;
pub const SCI_WORDLEFTEND: ::std::os::raw::c_uint = 2439;
pub const SCI_WORDLEFTENDEXTEND: ::std::os::raw::c_uint = 2440;
pub const SCI_WORDRIGHTEND: ::std::os::raw::c_uint = 2441;
pub const SCI_WORDRIGHTENDEXTEND: ::std::os::raw::c_uint = 2442;
pub const SCI_SETWHITESPACECHARS: ::std::os::raw::c_uint = 2443;
pub const SCI_GETWHITESPACECHARS: ::std::os::raw::c_uint = 2647;
pub const SCI_SETPUNCTUATIONCHARS: ::std::os::raw::c_uint = 2648;
pub const SCI_GETPUNCTUATIONCHARS: ::std::os::raw::c_uint = 2649;
pub const SCI_SETCHARSDEFAULT: ::std::os::raw::c_uint = 2444;
pub const SCI_AUTOCGETCURRENT: ::std::os::raw::c_uint = 2445;
pub const SCI_AUTOCGETCURRENTTEXT: ::std::os::raw::c_uint = 2610;
pub const SC_CASEINSENSITIVEBEHAVIOUR_RESPECTCASE: ::std::os::raw::c_uint = 0;
pub const SC_CASEINSENSITIVEBEHAVIOUR_IGNORECASE: ::std::os::raw::c_uint = 1;
pub const SCI_AUTOCSETCASEINSENSITIVEBEHAVIOUR: ::std::os::raw::c_uint = 2634;
pub const SCI_AUTOCGETCASEINSENSITIVEBEHAVIOUR: ::std::os::raw::c_uint = 2635;
pub const SC_MULTIAUTOC_ONCE: ::std::os::raw::c_uint = 0;
pub const SC_MULTIAUTOC_EACH: ::std::os::raw::c_uint = 1;
pub const SCI_AUTOCSETMULTI: ::std::os::raw::c_uint = 2636;
pub const SCI_AUTOCGETMULTI: ::std::os::raw::c_uint = 2637;
pub const SC_ORDER_PRESORTED: ::std::os::raw::c_uint = 0;
pub const SC_ORDER_PERFORMSORT: ::std::os::raw::c_uint = 1;
pub const SC_ORDER_CUSTOM: ::std::os::raw::c_uint = 2;
pub const SCI_AUTOCSETORDER: ::std::os::raw::c_uint = 2660;
pub const SCI_AUTOCGETORDER: ::std::os::raw::c_uint = 2661;
pub const SCI_ALLOCATE: ::std::os::raw::c_uint = 2446;
pub const SCI_TARGETASUTF8: ::std::os::raw::c_uint = 2447;
pub const SCI_SETLENGTHFORENCODE: ::std::os::raw::c_uint = 2448;
pub const SCI_ENCODEDFROMUTF8: ::std::os::raw::c_uint = 2449;
pub const SCI_FINDCOLUMN: ::std::os::raw::c_uint = 2456;
pub const SCI_GETCARETSTICKY: ::std::os::raw::c_uint = 2457;
pub const SCI_SETCARETSTICKY: ::std::os::raw::c_uint = 2458;
pub const SC_CARETSTICKY_OFF: ::std::os::raw::c_uint = 0;
pub const SC_CARETSTICKY_ON: ::std::os::raw::c_uint = 1;
pub const SC_CARETSTICKY_WHITESPACE: ::std::os::raw::c_uint = 2;
pub const SCI_TOGGLECARETSTICKY: ::std::os::raw::c_uint = 2459;
pub const SCI_SETPASTECONVERTENDINGS: ::std::os::raw::c_uint = 2467;
pub const SCI_GETPASTECONVERTENDINGS: ::std::os::raw::c_uint = 2468;
pub const SCI_SELECTIONDUPLICATE: ::std::os::raw::c_uint = 2469;
pub const SC_ALPHA_TRANSPARENT: ::std::os::raw::c_uint = 0;
pub const SC_ALPHA_OPAQUE: ::std::os::raw::c_uint = 255;
pub const SC_ALPHA_NOALPHA: ::std::os::raw::c_uint = 256;
pub const SCI_SETCARETLINEBACKALPHA: ::std::os::raw::c_uint = 2470;
pub const SCI_GETCARETLINEBACKALPHA: ::std::os::raw::c_uint = 2471;
pub const CARETSTYLE_INVISIBLE: ::std::os::raw::c_uint = 0;
pub const CARETSTYLE_LINE: ::std::os::raw::c_uint = 1;
pub const CARETSTYLE_BLOCK: ::std::os::raw::c_uint = 2;
pub const SCI_SETCARETSTYLE: ::std::os::raw::c_uint = 2512;
pub const SCI_GETCARETSTYLE: ::std::os::raw::c_uint = 2513;
pub const SCI_SETINDICATORCURRENT: ::std::os::raw::c_uint = 2500;
pub const SCI_GETINDICATORCURRENT: ::std::os::raw::c_uint = 2501;
pub const SCI_SETINDICATORVALUE: ::std::os::raw::c_uint = 2502;
pub const SCI_GETINDICATORVALUE: ::std::os::raw::c_uint = 2503;
pub const SCI_INDICATORFILLRANGE: ::std::os::raw::c_uint = 2504;
pub const SCI_INDICATORCLEARRANGE: ::std::os::raw::c_uint = 2505;
pub const SCI_INDICATORALLONFOR: ::std::os::raw::c_uint = 2506;
pub const SCI_INDICATORVALUEAT: ::std::os::raw::c_uint = 2507;
pub const SCI_INDICATORSTART: ::std::os::raw::c_uint = 2508;
pub const SCI_INDICATOREND: ::std::os::raw::c_uint = 2509;
pub const SCI_SETPOSITIONCACHE: ::std::os::raw::c_uint = 2514;
pub const SCI_GETPOSITIONCACHE: ::std::os::raw::c_uint = 2515;
pub const SCI_COPYALLOWLINE: ::std::os::raw::c_uint = 2519;
pub const SCI_GETCHARACTERPOINTER: ::std::os::raw::c_uint = 2520;
pub const SCI_GETRANGEPOINTER: ::std::os::raw::c_uint = 2643;
pub const SCI_GETGAPPOSITION: ::std::os::raw::c_uint = 2644;
pub const SCI_INDICSETALPHA: ::std::os::raw::c_uint = 2523;
pub const SCI_INDICGETALPHA: ::std::os::raw::c_uint = 2524;
pub const SCI_INDICSETOUTLINEALPHA: ::std::os::raw::c_uint = 2558;
pub const SCI_INDICGETOUTLINEALPHA: ::std::os::raw::c_uint = 2559;
pub const SCI_SETEXTRAASCENT: ::std::os::raw::c_uint = 2525;
pub const SCI_GETEXTRAASCENT: ::std::os::raw::c_uint = 2526;
pub const SCI_SETEXTRADESCENT: ::std::os::raw::c_uint = 2527;
pub const SCI_GETEXTRADESCENT: ::std::os::raw::c_uint = 2528;
pub const SCI_MARKERSYMBOLDEFINED: ::std::os::raw::c_uint = 2529;
pub const SCI_MARGINSETTEXT: ::std::os::raw::c_uint = 2530;
pub const SCI_MARGINGETTEXT: ::std::os::raw::c_uint = 2531;
pub const SCI_MARGINSETSTYLE: ::std::os::raw::c_uint = 2532;
pub const SCI_MARGINGETSTYLE: ::std::os::raw::c_uint = 2533;
pub const SCI_MARGINSETSTYLES: ::std::os::raw::c_uint = 2534;
pub const SCI_MARGINGETSTYLES: ::std::os::raw::c_uint = 2535;
pub const SCI_MARGINTEXTCLEARALL: ::std::os::raw::c_uint = 2536;
pub const SCI_MARGINSETSTYLEOFFSET: ::std::os::raw::c_uint = 2537;
pub const SCI_MARGINGETSTYLEOFFSET: ::std::os::raw::c_uint = 2538;
pub const SC_MARGINOPTION_NONE: ::std::os::raw::c_uint = 0;
pub const SC_MARGINOPTION_SUBLINESELECT: ::std::os::raw::c_uint = 1;
pub const SCI_SETMARGINOPTIONS: ::std::os::raw::c_uint = 2539;
pub const SCI_GETMARGINOPTIONS: ::std::os::raw::c_uint = 2557;
pub const SCI_ANNOTATIONSETTEXT: ::std::os::raw::c_uint = 2540;
pub const SCI_ANNOTATIONGETTEXT: ::std::os::raw::c_uint = 2541;
pub const SCI_ANNOTATIONSETSTYLE: ::std::os::raw::c_uint = 2542;
pub const SCI_ANNOTATIONGETSTYLE: ::std::os::raw::c_uint = 2543;
pub const SCI_ANNOTATIONSETSTYLES: ::std::os::raw::c_uint = 2544;
pub const SCI_ANNOTATIONGETSTYLES: ::std::os::raw::c_uint = 2545;
pub const SCI_ANNOTATIONGETLINES: ::std::os::raw::c_uint = 2546;
pub const SCI_ANNOTATIONCLEARALL: ::std::os::raw::c_uint = 2547;
pub const ANNOTATION_HIDDEN: ::std::os::raw::c_uint = 0;
pub const ANNOTATION_STANDARD: ::std::os::raw::c_uint = 1;
pub const ANNOTATION_BOXED: ::std::os::raw::c_uint = 2;
pub const ANNOTATION_INDENTED: ::std::os::raw::c_uint = 3;
pub const SCI_ANNOTATIONSETVISIBLE: ::std::os::raw::c_uint = 2548;
pub const SCI_ANNOTATIONGETVISIBLE: ::std::os::raw::c_uint = 2549;
pub const SCI_ANNOTATIONSETSTYLEOFFSET: ::std::os::raw::c_uint = 2550;
pub const SCI_ANNOTATIONGETSTYLEOFFSET: ::std::os::raw::c_uint = 2551;
pub const SCI_RELEASEALLEXTENDEDSTYLES: ::std::os::raw::c_uint = 2552;
pub const SCI_ALLOCATEEXTENDEDSTYLES: ::std::os::raw::c_uint = 2553;
pub const UNDO_MAY_COALESCE: ::std::os::raw::c_uint = 1;
pub const SCI_ADDUNDOACTION: ::std::os::raw::c_uint = 2560;
pub const SCI_CHARPOSITIONFROMPOINT: ::std::os::raw::c_uint = 2561;
pub const SCI_CHARPOSITIONFROMPOINTCLOSE: ::std::os::raw::c_uint = 2562;
pub const SCI_SETMOUSESELECTIONRECTANGULARSWITCH: ::std::os::raw::c_uint = 2668;
pub const SCI_GETMOUSESELECTIONRECTANGULARSWITCH: ::std::os::raw::c_uint = 2669;
pub const SCI_SETMULTIPLESELECTION: ::std::os::raw::c_uint = 2563;
pub const SCI_GETMULTIPLESELECTION: ::std::os::raw::c_uint = 2564;
pub const SCI_SETADDITIONALSELECTIONTYPING: ::std::os::raw::c_uint = 2565;
pub const SCI_GETADDITIONALSELECTIONTYPING: ::std::os::raw::c_uint = 2566;
pub const SCI_SETADDITIONALCARETSBLINK: ::std::os::raw::c_uint = 2567;
pub const SCI_GETADDITIONALCARETSBLINK: ::std::os::raw::c_uint = 2568;
pub const SCI_SETADDITIONALCARETSVISIBLE: ::std::os::raw::c_uint = 2608;
pub const SCI_GETADDITIONALCARETSVISIBLE: ::std::os::raw::c_uint = 2609;
pub const SCI_GETSELECTIONS: ::std::os::raw::c_uint = 2570;
pub const SCI_GETSELECTIONEMPTY: ::std::os::raw::c_uint = 2650;
pub const SCI_CLEARSELECTIONS: ::std::os::raw::c_uint = 2571;
pub const SCI_SETSELECTION: ::std::os::raw::c_uint = 2572;
pub const SCI_ADDSELECTION: ::std::os::raw::c_uint = 2573;
pub const SCI_DROPSELECTIONN: ::std::os::raw::c_uint = 2671;
pub const SCI_SETMAINSELECTION: ::std::os::raw::c_uint = 2574;
pub const SCI_GETMAINSELECTION: ::std::os::raw::c_uint = 2575;
pub const SCI_SETSELECTIONNCARET: ::std::os::raw::c_uint = 2576;
pub const SCI_GETSELECTIONNCARET: ::std::os::raw::c_uint = 2577;
pub const SCI_SETSELECTIONNANCHOR: ::std::os::raw::c_uint = 2578;
pub const SCI_GETSELECTIONNANCHOR: ::std::os::raw::c_uint = 2579;
pub const SCI_SETSELECTIONNCARETVIRTUALSPACE: ::std::os::raw::c_uint = 2580;
pub const SCI_GETSELECTIONNCARETVIRTUALSPACE: ::std::os::raw::c_uint = 2581;
pub const SCI_SETSELECTIONNANCHORVIRTUALSPACE: ::std::os::raw::c_uint = 2582;
pub const SCI_GETSELECTIONNANCHORVIRTUALSPACE: ::std::os::raw::c_uint = 2583;
pub const SCI_SETSELECTIONNSTART: ::std::os::raw::c_uint = 2584;
pub const SCI_GETSELECTIONNSTART: ::std::os::raw::c_uint = 2585;
pub const SCI_SETSELECTIONNEND: ::std::os::raw::c_uint = 2586;
pub const SCI_GETSELECTIONNEND: ::std::os::raw::c_uint = 2587;
pub const SCI_SETRECTANGULARSELECTIONCARET: ::std::os::raw::c_uint = 2588;
pub const SCI_GETRECTANGULARSELECTIONCARET: ::std::os::raw::c_uint = 2589;
pub const SCI_SETRECTANGULARSELECTIONANCHOR: ::std::os::raw::c_uint = 2590;
pub const SCI_GETRECTANGULARSELECTIONANCHOR: ::std::os::raw::c_uint = 2591;
pub const SCI_SETRECTANGULARSELECTIONCARETVIRTUALSPACE: ::std::os::raw::c_uint = 2592;
pub const SCI_GETRECTANGULARSELECTIONCARETVIRTUALSPACE: ::std::os::raw::c_uint = 2593;
pub const SCI_SETRECTANGULARSELECTIONANCHORVIRTUALSPACE: ::std::os::raw::c_uint = 2594;
pub const SCI_GETRECTANGULARSELECTIONANCHORVIRTUALSPACE: ::std::os::raw::c_uint = 2595;
pub const SCVS_NONE: ::std::os::raw::c_uint = 0;
pub const SCVS_RECTANGULARSELECTION: ::std::os::raw::c_uint = 1;
pub const SCVS_USERACCESSIBLE: ::std::os::raw::c_uint = 2;
pub const SCVS_NOWRAPLINESTART: ::std::os::raw::c_uint = 4;
pub const SCI_SETVIRTUALSPACEOPTIONS: ::std::os::raw::c_uint = 2596;
pub const SCI_GETVIRTUALSPACEOPTIONS: ::std::os::raw::c_uint = 2597;
pub const SCI_SETRECTANGULARSELECTIONMODIFIER: ::std::os::raw::c_uint = 2598;
pub const SCI_GETRECTANGULARSELECTIONMODIFIER: ::std::os::raw::c_uint = 2599;
pub const SCI_SETADDITIONALSELFORE: ::std::os::raw::c_uint = 2600;
pub const SCI_SETADDITIONALSELBACK: ::std::os::raw::c_uint = 2601;
pub const SCI_SETADDITIONALSELALPHA: ::std::os::raw::c_uint = 2602;
pub const SCI_GETADDITIONALSELALPHA: ::std::os::raw::c_uint = 2603;
pub const SCI_SETADDITIONALCARETFORE: ::std::os::raw::c_uint = 2604;
pub const SCI_GETADDITIONALCARETFORE: ::std::os::raw::c_uint = 2605;
pub const SCI_ROTATESELECTION: ::std::os::raw::c_uint = 2606;
pub const SCI_SWAPMAINANCHORCARET: ::std::os::raw::c_uint = 2607;
pub const SCI_MULTIPLESELECTADDNEXT: ::std::os::raw::c_uint = 2688;
pub const SCI_MULTIPLESELECTADDEACH: ::std::os::raw::c_uint = 2689;
pub const SCI_CHANGELEXERSTATE: ::std::os::raw::c_uint = 2617;
pub const SCI_CONTRACTEDFOLDNEXT: ::std::os::raw::c_uint = 2618;
pub const SCI_VERTICALCENTRECARET: ::std::os::raw::c_uint = 2619;
pub const SCI_MOVESELECTEDLINESUP: ::std::os::raw::c_uint = 2620;
pub const SCI_MOVESELECTEDLINESDOWN: ::std::os::raw::c_uint = 2621;
pub const SCI_SETIDENTIFIER: ::std::os::raw::c_uint = 2622;
pub const SCI_GETIDENTIFIER: ::std::os::raw::c_uint = 2623;
pub const SCI_RGBAIMAGESETWIDTH: ::std::os::raw::c_uint = 2624;
pub const SCI_RGBAIMAGESETHEIGHT: ::std::os::raw::c_uint = 2625;
pub const SCI_RGBAIMAGESETSCALE: ::std::os::raw::c_uint = 2651;
pub const SCI_MARKERDEFINERGBAIMAGE: ::std::os::raw::c_uint = 2626;
pub const SCI_REGISTERRGBAIMAGE: ::std::os::raw::c_uint = 2627;
pub const SCI_SCROLLTOSTART: ::std::os::raw::c_uint = 2628;
pub const SCI_SCROLLTOEND: ::std::os::raw::c_uint = 2629;
pub const SC_TECHNOLOGY_DEFAULT: ::std::os::raw::c_uint = 0;
pub const SC_TECHNOLOGY_DIRECTWRITE: ::std::os::raw::c_uint = 1;
pub const SC_TECHNOLOGY_DIRECTWRITERETAIN: ::std::os::raw::c_uint = 2;
pub const SC_TECHNOLOGY_DIRECTWRITEDC: ::std::os::raw::c_uint = 3;
pub const SCI_SETTECHNOLOGY: ::std::os::raw::c_uint = 2630;
pub const SCI_GETTECHNOLOGY: ::std::os::raw::c_uint = 2631;
pub const SCI_CREATELOADER: ::std::os::raw::c_uint = 2632;
pub const SCI_FINDINDICATORSHOW: ::std::os::raw::c_uint = 2640;
pub const SCI_FINDINDICATORFLASH: ::std::os::raw::c_uint = 2641;
pub const SCI_FINDINDICATORHIDE: ::std::os::raw::c_uint = 2642;
pub const SCI_VCHOMEDISPLAY: ::std::os::raw::c_uint = 2652;
pub const SCI_VCHOMEDISPLAYEXTEND: ::std::os::raw::c_uint = 2653;
pub const SCI_GETCARETLINEVISIBLEALWAYS: ::std::os::raw::c_uint = 2654;
pub const SCI_SETCARETLINEVISIBLEALWAYS: ::std::os::raw::c_uint = 2655;
pub const SC_LINE_END_TYPE_DEFAULT: ::std::os::raw::c_uint = 0;
pub const SC_LINE_END_TYPE_UNICODE: ::std::os::raw::c_uint = 1;
pub const SCI_SETLINEENDTYPESALLOWED: ::std::os::raw::c_uint = 2656;
pub const SCI_GETLINEENDTYPESALLOWED: ::std::os::raw::c_uint = 2657;
pub const SCI_GETLINEENDTYPESACTIVE: ::std::os::raw::c_uint = 2658;
pub const SCI_SETREPRESENTATION: ::std::os::raw::c_uint = 2665;
pub const SCI_GETREPRESENTATION: ::std::os::raw::c_uint = 2666;
pub const SCI_CLEARREPRESENTATION: ::std::os::raw::c_uint = 2667;
pub const SCI_STARTRECORD: ::std::os::raw::c_uint = 3001;
pub const SCI_STOPRECORD: ::std::os::raw::c_uint = 3002;
pub const SCI_SETLEXER: ::std::os::raw::c_uint = 4001;
pub const SCI_GETLEXER: ::std::os::raw::c_uint = 4002;
pub const SCI_COLOURISE: ::std::os::raw::c_uint = 4003;
pub const SCI_SETPROPERTY: ::std::os::raw::c_uint = 4004;
pub const KEYWORDSET_MAX: ::std::os::raw::c_uint = 8;
pub const SCI_SETKEYWORDS: ::std::os::raw::c_uint = 4005;
pub const SCI_SETLEXERLANGUAGE: ::std::os::raw::c_uint = 4006;
pub const SCI_LOADLEXERLIBRARY: ::std::os::raw::c_uint = 4007;
pub const SCI_GETPROPERTY: ::std::os::raw::c_uint = 4008;
pub const SCI_GETPROPERTYEXPANDED: ::std::os::raw::c_uint = 4009;
pub const SCI_GETPROPERTYINT: ::std::os::raw::c_uint = 4010;
pub const SCI_GETLEXERLANGUAGE: ::std::os::raw::c_uint = 4012;
pub const SCI_PRIVATELEXERCALL: ::std::os::raw::c_uint = 4013;
pub const SCI_PROPERTYNAMES: ::std::os::raw::c_uint = 4014;
pub const SC_TYPE_BOOLEAN: ::std::os::raw::c_uint = 0;
pub const SC_TYPE_INTEGER: ::std::os::raw::c_uint = 1;
pub const SC_TYPE_STRING: ::std::os::raw::c_uint = 2;
pub const SCI_PROPERTYTYPE: ::std::os::raw::c_uint = 4015;
pub const SCI_DESCRIBEPROPERTY: ::std::os::raw::c_uint = 4016;
pub const SCI_DESCRIBEKEYWORDSETS: ::std::os::raw::c_uint = 4017;
pub const SCI_GETLINEENDTYPESSUPPORTED: ::std::os::raw::c_uint = 4018;
pub const SCI_ALLOCATESUBSTYLES: ::std::os::raw::c_uint = 4020;
pub const SCI_GETSUBSTYLESSTART: ::std::os::raw::c_uint = 4021;
pub const SCI_GETSUBSTYLESLENGTH: ::std::os::raw::c_uint = 4022;
pub const SCI_GETSTYLEFROMSUBSTYLE: ::std::os::raw::c_uint = 4027;
pub const SCI_GETPRIMARYSTYLEFROMSTYLE: ::std::os::raw::c_uint = 4028;
pub const SCI_FREESUBSTYLES: ::std::os::raw::c_uint = 4023;
pub const SCI_SETIDENTIFIERS: ::std::os::raw::c_uint = 4024;
pub const SCI_DISTANCETOSECONDARYSTYLES: ::std::os::raw::c_uint = 4025;
pub const SCI_GETSUBSTYLEBASES: ::std::os::raw::c_uint = 4026;
pub const SCI_GETNAMEDSTYLES: ::std::os::raw::c_uint = 4029;
pub const SCI_NAMEOFSTYLE: ::std::os::raw::c_uint = 4030;
pub const SCI_TAGSOFSTYLE: ::std::os::raw::c_uint = 4031;
pub const SCI_DESCRIPTIONOFSTYLE: ::std::os::raw::c_uint = 4032;
pub const SC_MOD_INSERTTEXT: ::std::os::raw::c_uint = 1;
pub const SC_MOD_DELETETEXT: ::std::os::raw::c_uint = 2;
pub const SC_MOD_CHANGESTYLE: ::std::os::raw::c_uint = 4;
pub const SC_MOD_CHANGEFOLD: ::std::os::raw::c_uint = 8;
pub const SC_PERFORMED_USER: ::std::os::raw::c_uint = 16;
pub const SC_PERFORMED_UNDO: ::std::os::raw::c_uint = 32;
pub const SC_PERFORMED_REDO: ::std::os::raw::c_uint = 64;
pub const SC_MULTISTEPUNDOREDO: ::std::os::raw::c_uint = 128;
pub const SC_LASTSTEPINUNDOREDO: ::std::os::raw::c_uint = 256;
pub const SC_MOD_CHANGEMARKER: ::std::os::raw::c_uint = 512;
pub const SC_MOD_BEFOREINSERT: ::std::os::raw::c_uint = 1024;
pub const SC_MOD_BEFOREDELETE: ::std::os::raw::c_uint = 2048;
pub const SC_MULTILINEUNDOREDO: ::std::os::raw::c_uint = 4096;
pub const SC_STARTACTION: ::std::os::raw::c_uint = 8192;
pub const SC_MOD_CHANGEINDICATOR: ::std::os::raw::c_uint = 16384;
pub const SC_MOD_CHANGELINESTATE: ::std::os::raw::c_uint = 32768;
pub const SC_MOD_CHANGEMARGIN: ::std::os::raw::c_uint = 65536;
pub const SC_MOD_CHANGEANNOTATION: ::std::os::raw::c_uint = 131072;
pub const SC_MOD_CONTAINER: ::std::os::raw::c_uint = 262144;
pub const SC_MOD_LEXERSTATE: ::std::os::raw::c_uint = 524288;
pub const SC_MOD_INSERTCHECK: ::std::os::raw::c_uint = 1048576;
pub const SC_MOD_CHANGETABSTOPS: ::std::os::raw::c_uint = 2097152;
pub const SC_MODEVENTMASKALL: ::std::os::raw::c_uint = 4194303;
pub const SC_UPDATE_CONTENT: ::std::os::raw::c_uint = 1;
pub const SC_UPDATE_SELECTION: ::std::os::raw::c_uint = 2;
pub const SC_UPDATE_V_SCROLL: ::std::os::raw::c_uint = 4;
pub const SC_UPDATE_H_SCROLL: ::std::os::raw::c_uint = 8;
pub const SCEN_CHANGE: ::std::os::raw::c_uint = 768;
pub const SCEN_SETFOCUS: ::std::os::raw::c_uint = 512;
pub const SCEN_KILLFOCUS: ::std::os::raw::c_uint = 256;
pub const SCK_DOWN: ::std::os::raw::c_uint = 300;
pub const SCK_UP: ::std::os::raw::c_uint = 301;
pub const SCK_LEFT: ::std::os::raw::c_uint = 302;
pub const SCK_RIGHT: ::std::os::raw::c_uint = 303;
pub const SCK_HOME: ::std::os::raw::c_uint = 304;
pub const SCK_END: ::std::os::raw::c_uint = 305;
pub const SCK_PRIOR: ::std::os::raw::c_uint = 306;
pub const SCK_NEXT: ::std::os::raw::c_uint = 307;
pub const SCK_DELETE: ::std::os::raw::c_uint = 308;
pub const SCK_INSERT: ::std::os::raw::c_uint = 309;
pub const SCK_ESCAPE: ::std::os::raw::c_uint = 7;
pub const SCK_BACK: ::std::os::raw::c_uint = 8;
pub const SCK_TAB: ::std::os::raw::c_uint = 9;
pub const SCK_RETURN: ::std::os::raw::c_uint = 13;
pub const SCK_ADD: ::std::os::raw::c_uint = 310;
pub const SCK_SUBTRACT: ::std::os::raw::c_uint = 311;
pub const SCK_DIVIDE: ::std::os::raw::c_uint = 312;
pub const SCK_WIN: ::std::os::raw::c_uint = 313;
pub const SCK_RWIN: ::std::os::raw::c_uint = 314;
pub const SCK_MENU: ::std::os::raw::c_uint = 315;
pub const SCMOD_NORM: ::std::os::raw::c_uint = 0;
pub const SCMOD_SHIFT: ::std::os::raw::c_uint = 1;
pub const SCMOD_CTRL: ::std::os::raw::c_uint = 2;
pub const SCMOD_ALT: ::std::os::raw::c_uint = 4;
pub const SCMOD_SUPER: ::std::os::raw::c_uint = 8;
pub const SCMOD_META: ::std::os::raw::c_uint = 16;
pub const SC_AC_FILLUP: ::std::os::raw::c_uint = 1;
pub const SC_AC_DOUBLECLICK: ::std::os::raw::c_uint = 2;
pub const SC_AC_TAB: ::std::os::raw::c_uint = 3;
pub const SC_AC_NEWLINE: ::std::os::raw::c_uint = 4;
pub const SC_AC_COMMAND: ::std::os::raw::c_uint = 5;
pub const SCN_STYLENEEDED: ::std::os::raw::c_uint = 2000;
pub const SCN_CHARADDED: ::std::os::raw::c_uint = 2001;
pub const SCN_SAVEPOINTREACHED: ::std::os::raw::c_uint = 2002;
pub const SCN_SAVEPOINTLEFT: ::std::os::raw::c_uint = 2003;
pub const SCN_MODIFYATTEMPTRO: ::std::os::raw::c_uint = 2004;
pub const SCN_KEY: ::std::os::raw::c_uint = 2005;
pub const SCN_DOUBLECLICK: ::std::os::raw::c_uint = 2006;
pub const SCN_UPDATEUI: ::std::os::raw::c_uint = 2007;
pub const SCN_MODIFIED: ::std::os::raw::c_uint = 2008;
pub const SCN_MACRORECORD: ::std::os::raw::c_uint = 2009;
pub const SCN_MARGINCLICK: ::std::os::raw::c_uint = 2010;
pub const SCN_NEEDSHOWN: ::std::os::raw::c_uint = 2011;
pub const SCN_PAINTED: ::std::os::raw::c_uint = 2013;
pub const SCN_USERLISTSELECTION: ::std::os::raw::c_uint = 2014;
pub const SCN_URIDROPPED: ::std::os::raw::c_uint = 2015;
pub const SCN_DWELLSTART: ::std::os::raw::c_uint = 2016;
pub const SCN_DWELLEND: ::std::os::raw::c_uint = 2017;
pub const SCN_ZOOM: ::std::os::raw::c_uint = 2018;
pub const SCN_HOTSPOTCLICK: ::std::os::raw::c_uint = 2019;
pub const SCN_HOTSPOTDOUBLECLICK: ::std::os::raw::c_uint = 2020;
pub const SCN_CALLTIPCLICK: ::std::os::raw::c_uint = 2021;
pub const SCN_AUTOCSELECTION: ::std::os::raw::c_uint = 2022;
pub const SCN_INDICATORCLICK: ::std::os::raw::c_uint = 2023;
pub const SCN_INDICATORRELEASE: ::std::os::raw::c_uint = 2024;
pub const SCN_AUTOCCANCELLED: ::std::os::raw::c_uint = 2025;
pub const SCN_AUTOCCHARDELETED: ::std::os::raw::c_uint = 2026;
pub const SCN_HOTSPOTRELEASECLICK: ::std::os::raw::c_uint = 2027;
pub const SCN_FOCUSIN: ::std::os::raw::c_uint = 2028;
pub const SCN_FOCUSOUT: ::std::os::raw::c_uint = 2029;
pub const SCN_AUTOCCOMPLETED: ::std::os::raw::c_uint = 2030;
pub const SCN_MARGINRIGHTCLICK: ::std::os::raw::c_uint = 2031;
pub const SCN_AUTOCSELECTIONCHANGE: ::std::os::raw::c_uint = 2032;
pub const SC_BIDIRECTIONAL_DISABLED: ::std::os::raw::c_uint = 0;
pub const SC_BIDIRECTIONAL_L2R: ::std::os::raw::c_uint = 1;
pub const SC_BIDIRECTIONAL_R2L: ::std::os::raw::c_uint = 2;
pub const SCI_GETBIDIRECTIONAL: ::std::os::raw::c_uint = 2708;
pub const SCI_SETBIDIRECTIONAL: ::std::os::raw::c_uint = 2709;
#[cfg(target_os = "windows")]
extern "C" {
    pub fn Scintilla_RegisterClasses(hInstance: *mut ::std::os::raw::c_void)
                                     -> ::std::os::raw::c_int;
}
#[cfg(target_os = "windows")]
extern "C" {
    pub fn Scintilla_ReleaseResources() -> ::std::os::raw::c_int;
}
extern "C" {
    pub fn Scintilla_LinkLexers() -> ::std::os::raw::c_int;
}
pub type __gnuc_va_list = __builtin_va_list;
pub type va_list = __gnuc_va_list;
extern "C" {
    pub fn __mingw_get_crt_info() -> *const ::std::os::raw::c_char;
}
pub type rsize_t = usize;
pub type wchar_t = ::std::os::raw::c_ushort;
pub type wint_t = ::std::os::raw::c_ushort;
pub type wctype_t = ::std::os::raw::c_ushort;
pub type errno_t = ::std::os::raw::c_int;
pub type __time32_t = ::std::os::raw::c_long;
pub type __time64_t = ::std::os::raw::c_longlong;
pub type time_t = __time64_t;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct threadmbcinfostruct {
    _unused: [u8; 0],
}
pub type pthreadlocinfo = *mut threadlocaleinfostruct;
pub type pthreadmbcinfo = *mut threadmbcinfostruct;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct __lc_time_data {
    _unused: [u8; 0],
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct localeinfo_struct {
    pub locinfo: pthreadlocinfo,
    pub mbcinfo: pthreadmbcinfo,
}
# [ test ]
fn bindgen_test_layout_localeinfo_struct() {
    assert_eq!(::std::mem::size_of::<localeinfo_struct>(),
               16usize,
               concat!("Size of: ", stringify!(localeinfo_struct)));
    assert_eq!(::std::mem::align_of::<localeinfo_struct>(),
               8usize,
               concat!("Alignment of ", stringify!(localeinfo_struct)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<localeinfo_struct>())).locinfo as *const _ as usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(localeinfo_struct),
                       "::",
                       stringify!(locinfo)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<localeinfo_struct>())).mbcinfo as *const _ as usize
               },
               8usize,
               concat!("Offset of field: ",
                       stringify!(localeinfo_struct),
                       "::",
                       stringify!(mbcinfo)));
}
pub type _locale_tstruct = localeinfo_struct;
pub type _locale_t = *mut localeinfo_struct;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct tagLC_ID {
    pub wLanguage: ::std::os::raw::c_ushort,
    pub wCountry: ::std::os::raw::c_ushort,
    pub wCodePage: ::std::os::raw::c_ushort,
}
# [ test ]
fn bindgen_test_layout_tagLC_ID() {
    assert_eq!(::std::mem::size_of::<tagLC_ID>(),
               6usize,
               concat!("Size of: ", stringify!(tagLC_ID)));
    assert_eq!(::std::mem::align_of::<tagLC_ID>(),
               2usize,
               concat!("Alignment of ", stringify!(tagLC_ID)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<tagLC_ID>())).wLanguage as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(tagLC_ID),
                       "::",
                       stringify!(wLanguage)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<tagLC_ID>())).wCountry as *const _ as usize },
               2usize,
               concat!("Offset of field: ",
                       stringify!(tagLC_ID),
                       "::",
                       stringify!(wCountry)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<tagLC_ID>())).wCodePage as *const _ as usize },
               4usize,
               concat!("Offset of field: ",
                       stringify!(tagLC_ID),
                       "::",
                       stringify!(wCodePage)));
}
pub type LC_ID = tagLC_ID;
pub type LPLC_ID = *mut tagLC_ID;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct threadlocaleinfostruct {
    pub refcount: ::std::os::raw::c_int,
    pub lc_codepage: ::std::os::raw::c_uint,
    pub lc_collate_cp: ::std::os::raw::c_uint,
    pub lc_handle: [::std::os::raw::c_ulong; 6usize],
    pub lc_id: [LC_ID; 6usize],
    pub lc_category: [threadlocaleinfostruct__bindgen_ty_1; 6usize],
    pub lc_clike: ::std::os::raw::c_int,
    pub mb_cur_max: ::std::os::raw::c_int,
    pub lconv_intl_refcount: *mut ::std::os::raw::c_int,
    pub lconv_num_refcount: *mut ::std::os::raw::c_int,
    pub lconv_mon_refcount: *mut ::std::os::raw::c_int,
    pub lconv: *mut lconv,
    pub ctype1_refcount: *mut ::std::os::raw::c_int,
    pub ctype1: *mut ::std::os::raw::c_ushort,
    pub pctype: *const ::std::os::raw::c_ushort,
    pub pclmap: *const ::std::os::raw::c_uchar,
    pub pcumap: *const ::std::os::raw::c_uchar,
    pub lc_time_curr: *mut __lc_time_data,
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct threadlocaleinfostruct__bindgen_ty_1 {
    pub locale: *mut ::std::os::raw::c_char,
    pub wlocale: *mut wchar_t,
    pub refcount: *mut ::std::os::raw::c_int,
    pub wrefcount: *mut ::std::os::raw::c_int,
}
# [ test ]
fn bindgen_test_layout_threadlocaleinfostruct__bindgen_ty_1() {
    assert_eq!(::std::mem::size_of::<threadlocaleinfostruct__bindgen_ty_1>(),
               32usize,
               concat!("Size of: ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1)));
    assert_eq!(::std::mem::align_of::<threadlocaleinfostruct__bindgen_ty_1>(),
               8usize,
               concat!("Alignment of ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct__bindgen_ty_1>())).locale as
                   *const _ as usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1),
                       "::",
                       stringify!(locale)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct__bindgen_ty_1>())).wlocale as
                   *const _ as usize
               },
               8usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1),
                       "::",
                       stringify!(wlocale)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct__bindgen_ty_1>())).refcount as
                   *const _ as usize
               },
               16usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1),
                       "::",
                       stringify!(refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct__bindgen_ty_1>())).wrefcount as
                   *const _ as usize
               },
               24usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct__bindgen_ty_1),
                       "::",
                       stringify!(wrefcount)));
}
# [ test ]
fn bindgen_test_layout_threadlocaleinfostruct() {
    assert_eq!(::std::mem::size_of::<threadlocaleinfostruct>(),
               352usize,
               concat!("Size of: ", stringify!(threadlocaleinfostruct)));
    assert_eq!(::std::mem::align_of::<threadlocaleinfostruct>(),
               8usize,
               concat!("Alignment of ", stringify!(threadlocaleinfostruct)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).refcount as *const _ as usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_codepage as *const _ as
                   usize
               },
               4usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_codepage)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_collate_cp as *const _ as
                   usize
               },
               8usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_collate_cp)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_handle as *const _ as usize
               },
               12usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_handle)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_id as *const _ as usize
               },
               36usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_id)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_category as *const _ as
                   usize
               },
               72usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_category)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_clike as *const _ as usize
               },
               264usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_clike)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).mb_cur_max as *const _ as
                   usize
               },
               268usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(mb_cur_max)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lconv_intl_refcount as
                   *const _ as usize
               },
               272usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lconv_intl_refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lconv_num_refcount as
                   *const _ as usize
               },
               280usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lconv_num_refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lconv_mon_refcount as
                   *const _ as usize
               },
               288usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lconv_mon_refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lconv as *const _ as usize
               },
               296usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lconv)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).ctype1_refcount as
                   *const _ as usize
               },
               304usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(ctype1_refcount)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).ctype1 as *const _ as usize
               },
               312usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(ctype1)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).pctype as *const _ as usize
               },
               320usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(pctype)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).pclmap as *const _ as usize
               },
               328usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(pclmap)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).pcumap as *const _ as usize
               },
               336usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(pcumap)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<threadlocaleinfostruct>())).lc_time_curr as *const _ as
                   usize
               },
               344usize,
               concat!("Offset of field: ",
                       stringify!(threadlocaleinfostruct),
                       "::",
                       stringify!(lc_time_curr)));
}
pub type threadlocinfo = threadlocaleinfostruct;
pub type int_least8_t = ::std::os::raw::c_schar;
pub type uint_least8_t = ::std::os::raw::c_uchar;
pub type int_least16_t = ::std::os::raw::c_short;
pub type uint_least16_t = ::std::os::raw::c_ushort;
pub type int_least32_t = ::std::os::raw::c_int;
pub type uint_least32_t = ::std::os::raw::c_uint;
pub type int_least64_t = ::std::os::raw::c_longlong;
pub type uint_least64_t = ::std::os::raw::c_ulonglong;
pub type int_fast8_t = ::std::os::raw::c_schar;
pub type uint_fast8_t = ::std::os::raw::c_uchar;
pub type int_fast16_t = ::std::os::raw::c_short;
pub type uint_fast16_t = ::std::os::raw::c_ushort;
pub type int_fast32_t = ::std::os::raw::c_int;
pub type uint_fast32_t = ::std::os::raw::c_uint;
pub type int_fast64_t = ::std::os::raw::c_longlong;
pub type uint_fast64_t = ::std::os::raw::c_ulonglong;
pub type intmax_t = ::std::os::raw::c_longlong;
pub type uintmax_t = ::std::os::raw::c_ulonglong;
pub type uptr_t = usize;
pub type sptr_t = isize;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct max_align_t {
    pub __clang_max_align_nonce1: ::std::os::raw::c_longlong,
    pub __bindgen_padding_0: u64,
    pub __clang_max_align_nonce2: f64,
}
# [ test ]
fn bindgen_test_layout_max_align_t() {
    assert_eq!(::std::mem::size_of::<max_align_t>(),
               32usize,
               concat!("Size of: ", stringify!(max_align_t)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<max_align_t>())).__clang_max_align_nonce1 as *const _ as
                   usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(max_align_t),
                       "::",
                       stringify!(__clang_max_align_nonce1)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<max_align_t>())).__clang_max_align_nonce2 as *const _ as
                   usize
               },
               16usize,
               concat!("Offset of field: ",
                       stringify!(max_align_t),
                       "::",
                       stringify!(__clang_max_align_nonce2)));
}
pub type Sci_Position = isize;
pub type Sci_PositionU = usize;
pub type Sci_PositionCR = ::std::os::raw::c_long;
pub type SciFnDirect =
    ::std::option::Option<unsafe extern "C" fn(ptr: sptr_t,
                                               iMessage: ::std::os::raw::c_uint,
                                               wParam: uptr_t,
                                               lParam: sptr_t)
                                               -> sptr_t>;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_CharacterRange {
    pub cpMin: Sci_PositionCR,
    pub cpMax: Sci_PositionCR,
}
# [ test ]
fn bindgen_test_layout_Sci_CharacterRange() {
    assert_eq!(::std::mem::size_of::<Sci_CharacterRange>(),
               8usize,
               concat!("Size of: ", stringify!(Sci_CharacterRange)));
    assert_eq!(::std::mem::align_of::<Sci_CharacterRange>(),
               4usize,
               concat!("Alignment of ", stringify!(Sci_CharacterRange)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_CharacterRange>())).cpMin as *const _ as usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_CharacterRange),
                       "::",
                       stringify!(cpMin)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_CharacterRange>())).cpMax as *const _ as usize
               },
               4usize,
               concat!("Offset of field: ",
                       stringify!(Sci_CharacterRange),
                       "::",
                       stringify!(cpMax)));
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_TextRange {
    pub chrg: Sci_CharacterRange,
    pub lpstrText: *mut ::std::os::raw::c_char,
}
# [ test ]
fn bindgen_test_layout_Sci_TextRange() {
    assert_eq!(::std::mem::size_of::<Sci_TextRange>(),
               16usize,
               concat!("Size of: ", stringify!(Sci_TextRange)));
    assert_eq!(::std::mem::align_of::<Sci_TextRange>(),
               8usize,
               concat!("Alignment of ", stringify!(Sci_TextRange)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_TextRange>())).chrg as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_TextRange),
                       "::",
                       stringify!(chrg)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_TextRange>())).lpstrText as *const _ as usize },
               8usize,
               concat!("Offset of field: ",
                       stringify!(Sci_TextRange),
                       "::",
                       stringify!(lpstrText)));
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_TextToFind {
    pub chrg: Sci_CharacterRange,
    pub lpstrText: *const ::std::os::raw::c_char,
    pub chrgText: Sci_CharacterRange,
}
# [ test ]
fn bindgen_test_layout_Sci_TextToFind() {
    assert_eq!(::std::mem::size_of::<Sci_TextToFind>(),
               24usize,
               concat!("Size of: ", stringify!(Sci_TextToFind)));
    assert_eq!(::std::mem::align_of::<Sci_TextToFind>(),
               8usize,
               concat!("Alignment of ", stringify!(Sci_TextToFind)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_TextToFind>())).chrg as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_TextToFind),
                       "::",
                       stringify!(chrg)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_TextToFind>())).lpstrText as *const _ as usize
               },
               8usize,
               concat!("Offset of field: ",
                       stringify!(Sci_TextToFind),
                       "::",
                       stringify!(lpstrText)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_TextToFind>())).chrgText as *const _ as usize },
               16usize,
               concat!("Offset of field: ",
                       stringify!(Sci_TextToFind),
                       "::",
                       stringify!(chrgText)));
}
pub type Sci_SurfaceID = *mut ::std::os::raw::c_void;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_Rectangle {
    pub left: ::std::os::raw::c_int,
    pub top: ::std::os::raw::c_int,
    pub right: ::std::os::raw::c_int,
    pub bottom: ::std::os::raw::c_int,
}
# [ test ]
fn bindgen_test_layout_Sci_Rectangle() {
    assert_eq!(::std::mem::size_of::<Sci_Rectangle>(),
               16usize,
               concat!("Size of: ", stringify!(Sci_Rectangle)));
    assert_eq!(::std::mem::align_of::<Sci_Rectangle>(),
               4usize,
               concat!("Alignment of ", stringify!(Sci_Rectangle)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_Rectangle>())).left as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_Rectangle),
                       "::",
                       stringify!(left)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_Rectangle>())).top as *const _ as usize },
               4usize,
               concat!("Offset of field: ",
                       stringify!(Sci_Rectangle),
                       "::",
                       stringify!(top)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_Rectangle>())).right as *const _ as usize },
               8usize,
               concat!("Offset of field: ",
                       stringify!(Sci_Rectangle),
                       "::",
                       stringify!(right)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_Rectangle>())).bottom as *const _ as usize },
               12usize,
               concat!("Offset of field: ",
                       stringify!(Sci_Rectangle),
                       "::",
                       stringify!(bottom)));
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_RangeToFormat {
    pub hdc: Sci_SurfaceID,
    pub hdcTarget: Sci_SurfaceID,
    pub rc: Sci_Rectangle,
    pub rcPage: Sci_Rectangle,
    pub chrg: Sci_CharacterRange,
}
# [ test ]
fn bindgen_test_layout_Sci_RangeToFormat() {
    assert_eq!(::std::mem::size_of::<Sci_RangeToFormat>(),
               56usize,
               concat!("Size of: ", stringify!(Sci_RangeToFormat)));
    assert_eq!(::std::mem::align_of::<Sci_RangeToFormat>(),
               8usize,
               concat!("Alignment of ", stringify!(Sci_RangeToFormat)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_RangeToFormat>())).hdc as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_RangeToFormat),
                       "::",
                       stringify!(hdc)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_RangeToFormat>())).hdcTarget as *const _ as usize
               },
               8usize,
               concat!("Offset of field: ",
                       stringify!(Sci_RangeToFormat),
                       "::",
                       stringify!(hdcTarget)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_RangeToFormat>())).rc as *const _ as usize },
               16usize,
               concat!("Offset of field: ",
                       stringify!(Sci_RangeToFormat),
                       "::",
                       stringify!(rc)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_RangeToFormat>())).rcPage as *const _ as usize
               },
               32usize,
               concat!("Offset of field: ",
                       stringify!(Sci_RangeToFormat),
                       "::",
                       stringify!(rcPage)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_RangeToFormat>())).chrg as *const _ as usize },
               48usize,
               concat!("Offset of field: ",
                       stringify!(Sci_RangeToFormat),
                       "::",
                       stringify!(chrg)));
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct Sci_NotifyHeader {
    pub hwndFrom: *mut ::std::os::raw::c_void,
    pub idFrom: uptr_t,
    pub code: ::std::os::raw::c_uint,
}
# [ test ]
fn bindgen_test_layout_Sci_NotifyHeader() {
    assert_eq!(::std::mem::size_of::<Sci_NotifyHeader>(),
               24usize,
               concat!("Size of: ", stringify!(Sci_NotifyHeader)));
    assert_eq!(::std::mem::align_of::<Sci_NotifyHeader>(),
               8usize,
               concat!("Alignment of ", stringify!(Sci_NotifyHeader)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<Sci_NotifyHeader>())).hwndFrom as *const _ as usize
               },
               0usize,
               concat!("Offset of field: ",
                       stringify!(Sci_NotifyHeader),
                       "::",
                       stringify!(hwndFrom)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_NotifyHeader>())).idFrom as *const _ as usize },
               8usize,
               concat!("Offset of field: ",
                       stringify!(Sci_NotifyHeader),
                       "::",
                       stringify!(idFrom)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<Sci_NotifyHeader>())).code as *const _ as usize },
               16usize,
               concat!("Offset of field: ",
                       stringify!(Sci_NotifyHeader),
                       "::",
                       stringify!(code)));
}
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct SCNotification {
    pub nmhdr: Sci_NotifyHeader,
    pub position: Sci_Position,
    pub ch: ::std::os::raw::c_int,
    pub modifiers: ::std::os::raw::c_int,
    pub modificationType: ::std::os::raw::c_int,
    pub text: *const ::std::os::raw::c_char,
    pub length: Sci_Position,
    pub linesAdded: Sci_Position,
    pub message: ::std::os::raw::c_int,
    pub wParam: uptr_t,
    pub lParam: sptr_t,
    pub line: Sci_Position,
    pub foldLevelNow: ::std::os::raw::c_int,
    pub foldLevelPrev: ::std::os::raw::c_int,
    pub margin: ::std::os::raw::c_int,
    pub listType: ::std::os::raw::c_int,
    pub x: ::std::os::raw::c_int,
    pub y: ::std::os::raw::c_int,
    pub token: ::std::os::raw::c_int,
    pub annotationLinesAdded: Sci_Position,
    pub updated: ::std::os::raw::c_int,
    pub listCompletionMethod: ::std::os::raw::c_int,
}
# [ test ]
fn bindgen_test_layout_SCNotification() {
    assert_eq!(::std::mem::size_of::<SCNotification>(),
               152usize,
               concat!("Size of: ", stringify!(SCNotification)));
    assert_eq!(::std::mem::align_of::<SCNotification>(),
               8usize,
               concat!("Alignment of ", stringify!(SCNotification)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).nmhdr as *const _ as usize },
               0usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(nmhdr)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).position as *const _ as usize },
               24usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(position)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).ch as *const _ as usize },
               32usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(ch)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).modifiers as *const _ as usize
               },
               36usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(modifiers)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).modificationType as *const _ as usize
               },
               40usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(modificationType)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).text as *const _ as usize },
               48usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(text)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).length as *const _ as usize },
               56usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(length)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).linesAdded as *const _ as usize
               },
               64usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(linesAdded)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).message as *const _ as usize },
               72usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(message)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).wParam as *const _ as usize },
               80usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(wParam)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).lParam as *const _ as usize },
               88usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(lParam)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).line as *const _ as usize },
               96usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(line)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).foldLevelNow as *const _ as usize
               },
               104usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(foldLevelNow)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).foldLevelPrev as *const _ as usize
               },
               108usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(foldLevelPrev)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).margin as *const _ as usize },
               112usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(margin)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).listType as *const _ as usize },
               116usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(listType)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).x as *const _ as usize },
               120usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(x)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).y as *const _ as usize },
               124usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(y)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).token as *const _ as usize },
               128usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(token)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).annotationLinesAdded as *const _ as
                   usize
               },
               136usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(annotationLinesAdded)));
    assert_eq!(unsafe { &(*(::std::ptr::null::<SCNotification>())).updated as *const _ as usize },
               144usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(updated)));
    assert_eq!(unsafe {
                   &(*(::std::ptr::null::<SCNotification>())).listCompletionMethod as *const _ as
                   usize
               },
               148usize,
               concat!("Offset of field: ",
                       stringify!(SCNotification),
                       "::",
                       stringify!(listCompletionMethod)));
}
pub type __builtin_va_list = *mut ::std::os::raw::c_char;
# [ repr ( C ) ]
# [ derive ( Debug , Copy , Clone ) ]
pub struct lconv {
    pub _address: u8,
}
